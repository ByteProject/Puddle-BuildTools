!% -~S
!% $OMIT_UNUSED_ROUTINES=1
!% $MAX_ABBREVS=96
!% $TRANSCRIPT_FORMAT=1
!% -r
! ----------------------------------------------------------------------------
!  HIBERNATED 1
!  This Place is Death (Director's Cut)
!  Copyright (C) 2018-2021 Stefan Vogt, Puddle Soft.
!  http://8bitgames.itch.io | http://puddlesoft.net
! ----------------------------------------------------------------------------

! IFID (http://babel.ifarchive.org) -- generate with https://uuidgenerator.net
Array UUID_ARRAY string "UUID://a2c034ee-a9b1-4152-8331-cb1965c756b9//";
#Ifdef UUID_ARRAY; #Endif;

Switches e; ! Use Economize mode
Include ">abbrvs.h";

Constant Story "HIBERNATED 1";
Constant Headline "^This Place is Death (Director's Cut)^\
                   A Science Fiction Story by Stefan Vogt^\
                   First-time players should type ~about~^";
Release 8;

! game-specific defines
!Constant DEBUG;
Constant CUSTOM_ABBREVIATIONS;
Constant MAX_CARRIED = 20;
Constant OPTIONAL_SCORED;
Constant OPTIONAL_FULL_SCORE;
Constant OBJECT_SCORE = 3;
Constant ROOM_SCORE = 3;
Constant MAX_SCORE 314;
Constant OPTIONAL_MANUAL_REACTIVE;
Constant OPTIONAL_MANUAL_SCOPE;
Constant OPTIONAL_SHIP_DIRECTIONS;
Constant INITIAL_LOCATION_VALUE = AColdDarkPlace;
#ifV5;
Constant OPTIONAL_PROVIDE_UNDO; ! undo opcode is only supported in Z-machine v5 spec
#endif;

! 0 production build, 1 notification on errors, 2 full error messages
Constant RUNTIME_ERRORS = 0;

! routine overrides
Replace InvSub;
Replace SmellSub;
Replace PronounNotice;

Include "globals.h";

! cheap scenery
[SceneryReply word1 word2;
    Search:
        if (word1 == 'ceremonial' && word2 == 'dress') <<Search highpriestess>>;
        "It's not necessary to search that.";
    default:
        rfalse;
];
Include "ext_cheap_scenery.h";

! recurring messages and conversations (self-defined)
Constant MESS_UNKNOWN_WORD "Of all the languages in the universe, human language is a particularly expressive one, with a multitude of words that will help you progress in this game, unfortunately with the exception of ";
Constant MESS_ONEMORETIME "You do it one more time without gaining any new insights.";
Constant MESS_NONEEDAGAIN "There is no point in doing this again.";
Constant MESS_SCENERY "You needn't worry about that.";
Constant MESS_TURN_SELF_AT_TUBE "You feel that you do not have enough room around you to turn yourself.";
Constant MESS_TURN_SELF_ELSEWHERE "You turn yourself for a while but it has no effect other than feeling dizzy now.";
Constant MESS_LANDMARK "There are things known and things unknown and in between are doors and landmarks.";
Constant MESS_GO_LANDMARK "You decide to take a closer look and ";
Constant CONV_IO_CANTTELLMORE "~Any updates regarding this location, Io?~^^~Unfortunately, I can't tell you more than what I already said.~";
Constant MESS_NOWAYOFF "There's no obvious way to turn this off.";

! messages (lib-overrides)
Constant MSG_PROMPT 1000; 
Constant MSG_TAKE_ANIMATE 1001;
Constant MSG_EAT_ANIMATE 1002;
Constant MSG_PARSER_NO_INPUT 1003;
Constant MSG_PARSER_UNKNOWN_VERB 1004;
Constant MSG_PARSER_CANT_SEE_SUCH_THING 1005;
Constant MSG_PARSER_DONT_UNDERSTAND_WORD 1006;
Constant MSG_LOOK_BEFORE_ROOMNAME 1007;
Constant MSG_FILL_NO_WATER 1008;
Constant MSG_INSERT_NOT_CONTAINER 1009; 
Constant MSG_EMPTY_CANT_CONTAIN 1010;
Constant MSG_OPEN_YOU_CANT 1011;
[LibraryMessages p_msg p_arg_1 p_arg_2;
 switch(p_msg) { 
    MSG_PROMPT:
      print ">";
      p_arg_1 = p_arg_2;
    MSG_TAKE_ANIMATE, MSG_EAT_ANIMATE:
      "And you think ", (the) noun, " would be fine with that?";
    MSG_PARSER_NO_INPUT:
      "Uhm... ok?^";
    MSG_PARSER_UNKNOWN_VERB:
      "The Polaris-7 database has no entry for this verb. It is either unknown or not needed in this part of the Milky Way.";
    MSG_PARSER_CANT_SEE_SUCH_THING:
      "You are talking about something that is not here.";
    MSG_PARSER_DONT_UNDERSTAND_WORD:
      print (string)MESS_UNKNOWN_WORD;
			print "~";
			_PrintUnknownWord();
			print_ret "~.";
    MSG_LOOK_BEFORE_ROOMNAME:
      @new_line; ! mimics Inform style location texts, disable for Infocom style
    MSG_FILL_NO_WATER:
      "That doesn't seem to work. Are you referring to an object that can be filled with liquid? Please refer to the usage of the fill command by typing [fill object].";
    MSG_INSERT_NOT_CONTAINER, MSG_EMPTY_CANT_CONTAIN:
		  print_ret "Either this object can't contain any things or doing it won't help you progress in this game.";
    MSG_OPEN_YOU_CANT:
      if (verb_word == 'operate' or 'access' or 'start' or 'unsecure' or 'consult') "That's not something you can operate or consult.";
      "That doesn't seem to be something you can ", (verbname) p_arg_1, ".";
   }
 rfalse;
];

[PrintRank; ! this uses Puny's PrintRank feature, as an addition to the score
  print ", earning you the rank: ";
  if (score >= 311) "Alpha Centauri Survivor.";
  if (score >= 240) "Terran Export Hit.";
  if (score >= 120) "Curious Human.";
  "Cryogenic Sleeper.";
];

! flags (in the form of globals, which is very memory efficient)
Global F_HELP = 0; ! asks player to type HELP when the game starts

! will be triggered when the room is described
! [ LookRoutine;
! ];

! will be triggered when you visit a new room
! [ NewRoom;
! ];

Include "puny.h";

! set this for non-animate objects that may be referred to with "him"
Attribute male;

! limbo for objects that we don't need anymore, beware of the grues!
Object Limbo;

! custom classes
Class Room 
  with coordinates; ! room class for inside locations

Class Outside
  with coordinates; ! this is for locations outside

Class Character
  with talk_status 0; ! character class for NPCs

! walls will be an object we put in scope on demand
Object walls "walls"
  with name 'wall' 'walls//p',
      description [;
          if (location == AColdDarkPlace) "Your eyes are closed. You can't see the walls.";
          "You check the walls without gaining any new insights.";
      ],
      before [;
          Attack: 
            "There is surely a better way to deal with frustration.";
          Turn:
            "The walls? Are you serious?";
          Push, Pull:
            "The walls won't move.";
      ],
      found_in [;
            if (location ofclass Room) rtrue;
            if (location ofclass Outside) rfalse;
      ],
  has pluralname scenery;

Object  AColdDarkPlace "A Cold Dark Place" ! -- locations start here
  with  description [;
            print "You wake up. A feeling of nausea grips you as you slowly regain control of your senses. You should open your eyes.";
            if (F_HELP == 0) {
              print "^^[For getting started type ~help~ and then hit enter.]";
            }
            new_line;
        ],
        before [;
            Exit:
              "With your eyes closed, this is hard to achieve.";
            Jump:
              "You feel that you don't have enough room to jump here.";
        ],
   has  light;

Room  HibernationChamber "Hibernation Chamber"
   with  description
            "The room is lit by a gentle blue light. A glance through the porthole reveals nothing but the endless vastness of the Centaurus constellation. Proxima Centauri must be very close now. But there is no planetary orbit in sight. It seems an incident has interrupted your journey to Proxima C1. The only exit is starboard.",
        e_to LowerCorridor,
        cheap_scenery
            'hibernation' 'chamber' MESS_SCENERY
            '1' 'room' MESS_SCENERY 
            'status' 'monitor' "If this information is correct, then you have spent nearly 20 years in hypersleep. During this time a distance of about 4.1 light-years was covered. Proxima Centauri is 4.24 light-years away from Sol, which confirms the assumption that you haven't reached the target system yet. What's going on here?"
            '1' 'porthole' "Rigil Kentaurus and Proxima Centauri are clearly visible from here. And look how wonderful the lights of thousands of unknown stars glisten in the distance. A venerable sight."
            'rigil' 'kentaurus' "Rigil Kentaurus is one of the stars in the Alpha Centauri triple star system. It is further away from your current location than Proxima Centauri."
            'proxima' 'centauri' "Proxima Centauri is your destination, Proxima C1 to be precise, which is a strong exoplanet candidate and you were supposed to be the first human being to visit it."
            'stars' 'lights' SCN_STILL_EXISTING
            '1' 'star' SCN_STILL_EXISTING
            '1' 'exit' MESS_LANDMARK,
   has  light scored;

Constant SCN_STILL_EXISTING "You wonder how many of these are still existing.";

Object ->  gentlebluelight
  with  name 'gentle' 'blue' 'light',
    description "The light has the effect of making the room feel colder than it actually is. It's exciting how colors influence our perception.",
    before [;
        Examine:
            rfalse; ! for this object we only want EXAMINE to work...
        default:
            print_ret (string)MESS_SCENERY; ! ...the rest triggers a standard message
    ],
  has scenery;

Object ->  hypersleeptube "hypersleep tube"
  with  name 'hypersleep' 'tube',
    initial "The status monitor of the hypersleep tube flashes intrusively.",
    description "We have just begun to explore the final frontier. It takes decades to reach the nearest exoplanets we know so far. This technology enables us to travel in space without generation spaceships.",
    before [;
        Open, Enter:
          "You just got out of the hypersleep tube and there surely is a reason why Io initiated the wake-up sequence. You decide to head for the bridge instead.";
        Close:
          "It closed automatically after you climbed out.";
        Touch:
          "It feels very cold.";
        Smell:
          if (spacesuit has worn) rfalse;
          "It smells like an ice box.";
        Attack: 
          "It wouldn't be very clever to destroy it, right?";
        Push, Pull:
          "This thing is impossible to move.";
        SwitchOn, SwitchOff:
          "Why would you want to do that? Only Io may turn it on or off by the way.";
    ],
  has static;

Room  LowerCorridor "Lower Corridor"
  with  description
            "Flashing red warning lights are reflected on the palladium glass. From here, you're able to reach every section of the ship. The hibernation chamber is port, while your private area is starboard. The docking bay lies aft.",
        n_to securitydoor,
        s_to DockingBay,
        e_to Privatearea,
        w_to HibernationChamber,
        cheap_scenery
            'palladium' 'glass' "This was built out of raw materials that we extracted from the rings of Saturn."
            'lower' 'corridor' MESS_SCENERY
            '1' 'passage' MESS_LANDMARK
            'private' 'area' SCN_EX_PRIVATEAREA
            'docking' 'bay' SCN_EX_DOCKINGBAY
            'hibernation' 'chamber' SCN_EX_HIBCHAMBER,
   has  light scored;

[SCN_EX_PRIVATEAREA; ! here a few examples how examining a landmark can be turned into a movement
    print (string)MESS_GO_LANDMARK, "enter your private area by going starboard.^";
  <<Go FAKE_E_OBJ>>;
];

[SCN_EX_DOCKINGBAY;
    print (string)MESS_GO_LANDMARK, "enter the docking bay by going aft.^";
  <<Go FAKE_E_OBJ>>;
];

[SCN_EX_HIBCHAMBER;
    print (string)MESS_GO_LANDMARK, "return to the hibernation chamber by going port.^";
  <<Go FAKE_W_OBJ>>;
];

! cheap_scenery only allows objects with max. two words, so this goes separately
Object ->  flashingredlights
  with  name 'flashing' 'red' 'warning' 'lights',
    description "Looks like we have a problem.",
    before [;
        Examine:
            rfalse; ! for this object we only want EXAMINE to work...
        default:
            print_ret (string)MESS_SCENERY; ! ...the rest triggers a standard message
    ],
  has pluralname scenery;

Object ->  securitydoor "security door"
  with  name 'massive' 'security' 'door',
    description [;
      if (self has locked) "It seems the red alarm has caused the security door to lock.";
      else "You're glad you found your pass, otherwise this door would have been a real problem.";
    ],
    when_closed "The passage fore, leading to the Polaris-7 command unit, is barred by a massive security door. It divides the narrow corridor into two halves.",
    when_open "The security door is open, so you may also go fore to the Polaris-7 command unit.",
    door_to UpperCorridor,
    door_dir n_to,
    with_key biometricpass,
    before [;
        Close, Lock:
          if (self has open) "You decide to keep it open for now.";
        UnlockWithoutKey:
          if (~~(biometricpass in player)) rfalse; ! early return if the player doesn't have the pass
          print "(with your biometric pass)^";
          <<Unlock securitydoor biometricpass>>;
    ],
    after [;
        Unlock:
          ! this needs to be done since we want the door to open automatically
          give securitydoor open;
          scope_modified = true;
          "You insert your pass and a green light indicates authorization. The door opens.";
    ],
  has static door openable lockable locked;

Room  UpperCorridor "Upper Corridor"
  with  description
            "The 24th century is known for the emergence of crystalline architecture and what you see here is the perfect example of that era. The lab is situated port, the storage space lies starboard and fore you reach the bridge. You can also go aft to get back to the lower part of the ship.",
        n_to Bridge,
        s_to LowerCorridor,
        e_to StorageSpace,
        w_to Laboratory,
        cheap_scenery
            'upper' 'corridor' MESS_SCENERY
            'crystalline' 'architecture' "An outstanding monument of this architecture is the New Berlin Spaceport on Luna. You still have fond memories of the opening in 2347."
            'lab' 'laboratory' SCN_EX_LABORATORY
            'storage' 'space' SCN_EX_STORAGE
            '1' 'bridge' SCN_EX_BRIDGE
            'lower' 'part' SCN_EX_LOWERCORR,
   has  light scored;

[SCN_EX_LABORATORY; ! yes, even more examples 
    print (string)MESS_GO_LANDMARK, "enter the lab by going port.^";
  <<Go FAKE_W_OBJ>>;
];

[SCN_EX_STORAGE; ! yes, even more examples 
    print (string)MESS_GO_LANDMARK, "head starboard.^";
  <<Go FAKE_E_OBJ>>;
];

[SCN_EX_BRIDGE; ! yes, even more examples 
    print (string)MESS_GO_LANDMARK, "head fore to the bridge.^";
  <<Go FAKE_N_OBJ>>;
];

[SCN_EX_LOWERCORR; ! yes, even more examples 
    print (string)MESS_GO_LANDMARK, "return to the lower part of the Polaris-7.^";
  <<Go FAKE_S_OBJ>>;
];

Room  DockingBay "Docking Bay"
  with  description
            "You stand in a desolate hall. This is the section where raw materials and samples of foreign origin must be stored, according to the Terran Alliance directive. Fore you get back to the corridor. An airlock aft allows you to leave the Polaris-7.",
        n_to LowerCorridor,
        s_to Airlock,
        cheap_scenery
            'docking' 'bay' MESS_SCENERY
            'desolate' 'hall' "If you had reached Proxima Centauri, it would certainly look different here."
            'raw' 'materials' "At the moment you cannot see any raw materials."
            '1' 'samples' "There are no samples here yet."
            '1' 'airlock' MESS_LANDMARK
            '1' 'corridor' SCN_EX_LOWERFORE,
   has  light scored;

[SCN_EX_LOWERFORE; ! yes, even more examples 
    print (string)MESS_GO_LANDMARK, "return to the lower corridor.^";
  <<Go FAKE_N_OBJ>>;
];

Object ->  laserrifle "laser rifle" ! this is a laser weapon supporting two modes
  with  name 'laser' 'rifle' 'mode' 'modes',
    initial "A laser rifle is leaning against the wall.",
    description [;
        ! the description output is based on the weapon_mode property
        print "The rifle supports two modes: paralyze and disintegrate. It currently is switched to ";
        if (self.weapon_mode == 0) print "paralyze";
        if (self.weapon_mode == 1) print "disintegrate";
        print_ret " mode.^^You can change the weapon mode with [switch rifle / switch mode] and shoot something with [attack / shoot mutant with rifle].";
    ],
    before [;
        SwitchOn: ! this allows us to change modes by typing SWITCH MODE or SWITCH RIFLE
            print "You switch the laser rifle to ";
            if (self.weapon_mode == 0) {
                ! target mode is going to be disintegrate
                self.weapon_mode = 1; 
                print_ret "disintegrate mode."; 
            }
            if (self.weapon_mode == 1) {
                ! target mode is going to be paralyze
                self.weapon_mode = 0;
                print_ret "paralyze mode.";
            }
        Attack: ! triggered by the 'attack' extend grammar if someone decides to SHOOT RILFE AT MUTANT
          "Shoot something with [attack / shoot mutant with rifle].";
    ],
    weapon_mode 0, ! 0 = paralyze, 1 = disintegrate
  has scored;

Object ->  spacesuit "spacesuit"
  with  name 'spacesuit' 'suit',
    initial "You also notice your spacesuit.",
    description "Terran spacesuits are durable and lightweight, much like a form-fitting second skin.",
    before [;
        Disrobe:
          "You realize that this might be a bad idea, so you keep the spacesuit on.";
        Drop, Insert, PutOn:
          "You're not going to leave your spacesuit somewhere.";
    ],
  has clothing scored;

Room  Airlock "Airlock"
  with  description
            "A constant feeling of anxiety grips you in here. Before entering the eternal cold of space, you should check your gear. Fore, the safe environment of the Polaris-7 is waiting for you.",
        n_to DockingBay,
        cheap_scenery
            '1' 'airlock' MESS_SCENERY
            'cold' 'space' "Out there you can die in under one minute. What a promising outlook.",
   has  light scored;

Object ->  glowingredbutton "glowing red button"
  with  name 'glowing' 'red' 'button' 'hull',
    initial "A glowing red button is embedded into the hull of the ship.",
    description "This button will open the airlock.",
    before [;
        Push, SwitchOn:
          if (io.talk_status == 0) "You need to know what's going on here before you should actually consider leaving the Polaris. Make sure you get to the bridge and talk to Io, who surely can brief you."; ! pre-game needs to be completed first
          if (spacesuit has worn) { ! check if spacesuit is worn
            print "The airlock opens and you drift down into open space.^";
            PlayerTo (AlienShipEntrance); ! if so, move player near the alien ship
            MoveFloatingObjects();
            rtrue;
          }
          else {
            print "It's a bad idea to venture into space without wearing a spacesuit. Death whispered a lullaby and now your frozen body is drifting forever between the stars.";
            deadflag = true; ! this will kill the player, farewell brave adventurer
            rtrue;
          }
    ],
  has static;

Room  Bridge "Bridge"
  with  description
            "The heart of the Polaris-7 is dominated by a massive window, which provides an impressive all-round view at a 180 degree angle. A dark object obscures the stars in the field of vision, certainly of extraterrestial origin, slowly drifting like a dead giant in icy waters. A cockpit chair is located in front of the main console, where countless lights dance. The exit lies aft.",
        s_to UpperCorridor,
        cheap_scenery
            '1' 'bridge' MESS_SCENERY
            'massive' 'window' "It takes your breath away every single time you look through it."
            'all-round' 'view' "Very helpful in case the auto-pilot fails."
            'dark' 'object' "What is this thing?"
            'countless' 'lights' "A fascinating play of colors. You could stare at this for hours."
            'cockpit' 'chair' ""
            '1' 'stars' "You barely can see any stars because of the drifting object."
            '1' 'exit' MESS_LANDMARK,
   has  light scored;

Object -> cockpitchair "cockpitchar",
  with name 'cockpit' 'chair',
    description "A Terran standard cockpit chair. It's very comfortable actually.",
    before [;
      Examine:
        rfalse; ! for this object we only want EXAMINE to work...
      Enter:
        "You sit down on the cockpit chair for a while but remind yourself that there are still some problems to be solved and so you grudgingly get up again.";
      default:
        print_ret (string)MESS_SCENERY; ! ...the rest triggers a standard message
    ],
  has supporter scenery;

! hint: for Hibernated I decided to go with "canned conversations", see "life" for reference 
Character -> io "Io"
  with name 'Io',
      initial "Io is here. He currently is plugged into the ship's network hub.",
      description "At first sight he looks like a small blinking cube but Io is an artifical intelligence that was built to control every aspect of the Polaris-7 while you're in hypersleep. Being portable and easily adaptable to all kinds of technology is a fundamental part of his design concept, provided you upgraded him with the right interface. In an emergency situation like this, you shouldn't go anywhere without him in your pocket. Out here between the stars he is the only friend you can talk to anyway.",
      life [;
          Talk:
            ! talk_status 0: first time Olivia talks to Io after waking up from hypersleep
            if (self.talk_status == 0) {
              self.talk_status = 1;
              score = score + 3;
              "You find it hard to take your eyes off the gloomy thing out there and catch yourself still staring at it while you speak. ~Io, status update please.~^^Io begins to glow, signaling that he has understood and is processing an answer for you. It's a load off your mind, because if Io would be inoperative, the consequences would be severe. ~Hi Olivia, please forgive me for initiating the wake-up process, but as you probably noticed already, we have a significant problem. An unknown object crossed our route and captured us with a tractor beam. Initial analyses confirm that the alien spacecraft is very old. It seems to have been in this region for thousands of years as I am not detecting any hypertransfer residues.~^^Io pauses for a moment and then continues. ~Proxima Centauri is only 0.14 light-years away but as long as we cannot move, it is impossible for us to fulfill our mission goal and confirm habitable exoplanets in the target system. We are basically stranded. Frankly, my databases do not have an emergency protocol for such a situation so I hope you have an idea, Olivia.~^^~Oh, I do. Let's knock and see who opens the door. How does that sound?~";
            }
            ! talk_status 1: Olivia soon needs help to unlock the network hub
            if (self.talk_status == 1) {
              self.talk_status = 2;
              score = score + 3;
              "~Hey Io, I can't seem to remember the code that unlocks the network hub. Can you give it to me?~^^~Of course! It's 6502.~";
            }
            !  conversations depending on the location and some on the talk_status (progress)
            if (player in AlienShipHull) {
              if (AlienShipHull.talk_status == 1) print_ret (string)CONV_IO_CANTTELLMORE;
              AlienShipHull.talk_status = 1;
              score = score + 3;
              "~Io, can you scan these spiders for me?~^^Io flashes while he is computing data. ~It is actually quite obvious but at this point I would like to confirm that they are artificial, robotic beings based on a very advanced technology. I can't detect any organic material.~";
            }
            if (player in SphereRoom) {
              if (SphereRoom.talk_status == 1) print_ret (string)CONV_IO_CANTTELLMORE;
              SphereRoom.talk_status = 1;
              score = score + 3;
              "~Can you say something about this phenomenon, Io?~^^~I can't tell you what it is, nor can I tell you what it's made of. What I see is that its spectrum seems to extend in your direction, as if it wants to reach out to you, wanting to touch you. This could be a trick, Olivia. Be careful.~";
            }
            if (player in GloomyCorridor) {
              if (GloomyCorridor.talk_status == 1) print_ret (string)CONV_IO_CANTTELLMORE;
              GloomyCorridor.talk_status = 1;
              score = score + 3;
              "~Isn't this terminal strange?~^^~I'm afraid my sensors don't really have an explanation either, Olivia. It almost seems like it's in the wrong time and the wrong place.~";
            }
            if (player in BaseStation) {
              if (BaseStation.talk_status == 1) print_ret (string)CONV_IO_CANTTELLMORE;
              BaseStation.talk_status = 1;
              score = score + 3;
              "~Is there something we can do for these droids, Io?~^^~It seems their software got corrupted. I guess those who built them, are able to repair them as well. The question is if those who built them are still around.~";
            }
            if (player in RegenerationChamber) {
              if (RegenerationChamber.talk_status == 1) print_ret (string)CONV_IO_CANTTELLMORE;
              RegenerationChamber.talk_status = 1;
              score = score + 3;
              "~Io, what kind of place do you think this is?~^^Io flashes while scanning the area. ~I have no doubt this is an infirmary and considering the absence of beds, patients are probably placed in these tubes to heal.~";
            }
            if (player in ControlRoom) {
              if (io.learnedCuneiform == true && ControlRoom.talk_status == 1) ControlRoom.talk_status = 2;
              if (ControlRoom.talk_status == 1 or 3) print_ret (string)CONV_IO_CANTTELLMORE;
              if (ControlRoom.talk_status == 0 && io.learnedCuneiform == true) ControlRoom.talk_status = 2;
              if (ControlRoom.talk_status == 0) {
                ControlRoom.talk_status = 1;
                digitallibrary.topic_cuneiform = true;
                "~Can you check out these symbols on the terminal for me, Io? Somehow they look familiar.~^^It takes a moment for Io to analyze the writing. ~You are right. They do look familiar because this is an advanced form of cuneiform writing. Fascinating, isn't it? The knowledge to process this data could be added to my libraries.~";
              }
              if (ControlRoom.talk_status == 2) { ! now that Io is able to read and process Cuneiform writing
                ControlRoom.talk_status = 3;
                score = score + 3;
                "~Can you check this terminal, Io? With your cuneiform knowledge, can tell me something about its purpose now?~^^~Yes, Olivia. The sole purpose of this terminal is authentication. It powers a security mechanism here on the ship and it wants an object which identifies you as crew member with the necessary privileges.~";
              }
            }
            if (player in SmallQuarter) {
              if (SmallQuarter.talk_status == 1) print_ret (string)CONV_IO_CANTTELLMORE;
              if (mummifiedhand in body) {
                SmallQuarter.talk_status = 1;
                score = score + 3;
                "~Tell me something.~^^Io's answer comes pretty instantly, suggesting he was already expecting that you might be interested in his opinion. ~There is no more life in this body, but you already knew that. I can't detect any toxins or other hazards, so you are likely safe here. The species is definitely alien, looks very similar to humans but the internal anatomy is different. For example, these creatures have two hearts and several stomachs. Oh, and here is a hint for you: as dead as he is, he could lend us a helping hand.~^^You sigh. ~You are speaking in riddles, Io.~";
              }
              else {
                 "~Tell me something, Io.~^^~You did everything here that you were supposed to do, so there is nothing I can add.~"; ! if you came here, you missed 3 points. sorry! ok ok, not sorry :D 
              }
            }
            if (player in CargoBay) {
              if (io.learnedCuneiform == true && CargoBay.talk_status == 1) CargoBay.talk_status = 2;
              if (CargoBay.talk_status == 1 or 3) print_ret (string)CONV_IO_CANTTELLMORE;
              if (CargoBay.talk_status == 0 && io.learnedCuneiform == true) CargoBay.talk_status = 2;
              if (CargoBay.talk_status == 0) {
                CargoBay.talk_status = 1;
                digitallibrary.topic_cuneiform = true;
                "~I am wondering if you're able to operate this terminal, Io?~^^~First, I would need to know more about cuneiform writing. What you see on the screen is a quite advanced form of it. The knowledge to process this data could be added to my libraries. Isn't it interesting that we find a Terran dialect on an alien spaceship, many light-years away from the Sol system?~";
              }
              if (CargoBay.talk_status == 2) {
                score = score + 3;
                CargoBay.talk_status = 3;
                move connector to CargoBay;
                scope_modified = true;
                "~Now that you are able to process cuneiform language, are you able to operate the terminal?~^^~Yes, I am.~ Io flashes while he's remotely connecting to the system. ~Most of the terminal's functions are limited to handling cargo. However, there is one quite interesting option. I am able to generate a positronic device, which is apparently intended to connect foreign technology with the one on this ship. My guess is there was brisk trade with other cultures.~^^Not far from the terminal, a small positronic connector materializes. You can't tell if it was transported here from another place or if it had been created just in this moment.";
              } 
            }
            if (player in HalloftheDead) {
              if (io.learnedPositronics == true && HalloftheDead.talk_status == 1 && io.upgrade_status > 0) HalloftheDead.talk_status = 2;
              if (HalloftheDead.talk_status == 1 or 3) print_ret (string)CONV_IO_CANTTELLMORE;
              if (HalloftheDead.talk_status == 0) {
                score = score + 3;
                HalloftheDead.talk_status = 1;
                digitallibrary.topic_positronics = true;
                "~Impressive, isn't it?~^^Io seems to process something and doesn't respond immediately. ~Olivia, I am detetecting no life in here. Whatever it is that happened to these beings, they must be dead for a long time now. And regarding the capsule, there is a lock based on positronic logic inside, which protects it from being opened. I need something that allows me connecting to positronic interfaces and I need knowledge about positronics in general in my libraries before we are able to progress here.~";
              }
              if (HalloftheDead.talk_status == 2) {
                if (cryosleepcapsule has open) "~Glad we were able to open the capsule!~";
                score = score + 3;
                HalloftheDead.talk_status = 3;
                "~How do we proceed now, Io?~^^Io answers promptly. ~I will remotely connect to the capsule and disable the protection when you try to open it. Just go ahead.~";
              }
            }
            if (player in StarGallery) {
              if (StarGallery.talk_status == 1) print_ret (string)CONV_IO_CANTTELLMORE;
              StarGallery.talk_status = 1;
              score = score + 3;
              "~Please analyze the projection, Io! There's something about it that confuses me.~^^Your little companion pulsates in your hand while scanning the Milky Way simulation. ~I think I found what you're after, Olivia. As you already suspected, it's the observer's point of view that makes the difference. This is how our galaxy looks like when viewed from Andromeda.~";
            }
            if (player in Decontamination) {
              if (Decontamination.talk_status == 1) print_ret (string)CONV_IO_CANTTELLMORE;
              Decontamination.talk_status = 1;
              score = score + 3;
              "~Io, tell me something about this place.~^^~The security system here is in alarm mode. It currently treads everything as carrier of the disease that affected the alien masters. You are only allowed to pass when you are immune.~";
            }
            if (player in SpecimenExhibition) {
              if (SpecimenExhibition.talk_status == 1) print_ret (string)CONV_IO_CANTTELLMORE;
              SpecimenExhibition.talk_status = 1;
              score = score + 3;
              "~Io, can you...~^^You are not able to complete your sentence. ~I know exactly you want me to do, Olivia. Yes, these are human beings and no replicas. My scans also show that they died of natural causes. I don't know how the preservation in here works, but there are no signs of decay or deterioration. My assumption is these people were not abducted, but brought here after their natural death to be with their gods in the afterlife.~";
            }
            if (player in PositronicsLab) {
              if (PositronicsLab.talk_status == 1) print_ret (string)CONV_IO_CANTTELLMORE;
              if (PositronicsLab.talk_status == 2) "~How are you now?~^^You have the impression that Io has to think about this answer, as crazy as that may sound. ~That's a good question. I feel different. Somehow everything seems complete now. A part of me has been added, a part which I never had. I am no longer who I once was, and yet I am undoubtedly me. Does that make sense to you?~";
              if (brokenassistantrobot.broken == true) {
                score = score + 3;
                "~Are you able to communicate with this robot, Io? It seems friendly.~^^~Yes. It is asking for our help as it had been damaged and needs spares to repair itself.~";
              }
              if (brokenassistantrobot.broken == false) {
                PositronicsLab.talk_status = 1;
                score = score + 3;
                "~We repaired the robot. What now?~^^~Oh, that's interesting. It offers an upgrade for me, Olivia. The right chipset and conductor material is needed though. If you already have something in your pocket that qualifies, you may give it to the robot. The upgrade obviously allows me to connect with literally every system on this ship, which, considering our current situation, is not the worst option for us.~"; 
              }
            }
            if (player in StarshipBridge) {
              if (io.upgrade_status ~= 2) "~If you have any ideas Io, let me know!~^^~To be honest, I am not sure. I feel something wants to communicate with me but my technology is not advanced enough to understand.~";
              if (io in player) "~What next, Io?~^^~I see it all now, Olivia. This is the place where I am meant to be. The ship's positronic mainframe communicates with me. Her name is Ysh. She grants me full control over her systems. Everything we've been through since we've been captured by that tractor beam happened for a reason, and every move we made came down to this one moment. Please put me on the mainframe. Don't be afraid. You will soon have your answers.";
              if (io in StarshipBridge && navigator.talk_status == 0) "You try to say something but Io is faster. ~The navigator wants to talk to you, Olivia. Don't let him wait, his time has come to an end.~";
              if (io in StarshipBridge && datahub.starchart_updated == true && self.talk_status == 2) {
                self.talk_status = 3;
                print "~The star charts have been successfully updated, Olivia. We are ready to travel to Gyan, the homeworld of the alien masters, right in the heart of the Andromeda Galaxy.~^^You didn't expect that. ~Andromeda? They are not from the Milky Way?~^^Io projects a hologram showing the Andromeda galaxy into the air. The simulation zooms in to a red dwarf system, close to the galactic center. ~That's Gyan.~ he says. ~The journey takes only a few days. Do you want me to initite the hypertravel sequence?~ ";
                if (YesOrNo()) EndingSequence();
                rtrue;
              }
              if (io in StarshipBridge && datahub.starchart_updated == true && self.talk_status == 3) {
                print "~We are ready to travel to Gyan, Olivia. Do you want me to initite the hypertravel sequence?~ ";
                if (YesOrNo()) EndingSequence();
                rtrue;
              }
            }
            if (self.talk_status > 1 && player in HibernationChamber or Privatearea or StorageSpace or Laboratory or UpperCorridor or LowerCorridor or Airlock or DockingBay or Bridge) {
              "~Anything else I need to know, Io?~^^~Well, here on the Polaris-7, there is not much to talk about. Once we're on the alien object, be sure to reach out to me regularly, especially when we visit interesting locations. What your eyes cannot see may surely be uncovered by my sensors.~";
            }
            rfalse; ! this initates the standard response "you can't think of anything to say to..."
      ],
      before [;
          Take: ! we need to override TAKE since Io is an animate object
            if (io in StarshipBridge) "Io has to remain on the bridge.";
            if (networkhub has locked) "You need to unsecure the network hub before you can take Io with you.";
            else {
              if (~~(io in player)) {
                move io to player;
                update_moved = true;
                scope_modified = true;
                "You take Io with you.";
              }
              else "You already have Io with you.";  
            }
          Drop, Insert, PutOn: ! Io should remain in the player's inventory as he is so crucial for this game
            if (~~(io in player)) "You're not carrying Io.";
            if (io in player && player in StarshipBridge) {
              if (io.upgrade_status < 2) "You're onto something, but Io is not progressed enough for being left here on the bridge.";
              score = score + 3;
              move io to StarshipBridge;
              io.initial = "Io is now installed here. He merged with Ysh, the positronic mainframe of the alien ship, giving him the ability to control it.";
              give io ~moved;
              give hatch open;
              scope_modified = true;
              "You carefully put Io on the positronic mainframe. He flashes much faster than he usually does while endless streams of data flood him. It takes a few minutes until he pulsates softly, signalizing that he finally is synchronized with the alien spaceship.^^~The hatch to the navigator is now open for you, Oliva. Go, find your answers.";
            }
            "You are certainly not going to leave Io here.";
      ],
      learnedPositronics false, ! topics learned via the Polaris digital library
      learnedCuneiform false,
      upgrade_status 0, ! 0 none, 1 connector, 2 positronic
  has proper animate scored;

Object ->  mainconsole "main console"
  with  name 'main' 'console',
    description "The main console is meant for controlling every aspect of the ship. You don't have to operate it as long as an Io unit is installed, which is the case on the Polaris class.",
    before [;
      Open, SwitchOn, Touch:
        "All systems are up and running, which is good news, and the stats look perfectly fine, except for the fact that the Polaris is unable to move for some reason, which is bad news.^^You may enter a code sequence: [type 1234 on/into main console]";
      SwitchOff:
        print_ret (string)MESS_NOWAYOFF;
    ],
  has transparent scenery; ! the transparent attribute makes the player see the hub as a part of the main console

Object -> ->  networkhub "network hub"
  with  name 'network' 'hub',
    description [;
        print "A little hub that allows connecting various devices with the ship. It currently is ";
        if (self has locked) print_ret "secured.";
        else print_ret "unsecured.";
    ],
    before [;
        Open, Touch, SwitchOn: ! we want the player using the main console instead of the hub itself
          "You need to operate the main console to release something from the network hub. There is a code needed to unsecure it.^^[type 1234 on/into main console]";
    ],
  has locked scenery;

Room  Laboratory "Laboratory"
  with  description
            "When the Polaris-7 was built, great importance was attached to equipping this place with everything an explorer might need in space. The laboratory supports a range of focal points such as medicine, biology, chemistry and technology. One door leading starboard is the sole exit.^^A computer allows the analysis and processing of various materials.",
        e_to UpperCorridor,
        cheap_scenery
            'lab' 'laboratory' MESS_SCENERY
            '1' 'place' MESS_SCENERY
            '1' 'door' MESS_LANDMARK
            '1' 'cubes' "You need to be more precise. Which cube do you want to examine?"
   has  light scored;

Object ->  computer "computer"
  with  name 'computer' 'labtron' '3000',
    description "The MOS Technology LabTron 3000 is at your service and ready to mess with some gene pools.",
    before [;
        SwitchOff:
          print_ret (string)MESS_NOWAYOFF;
        Open, SwitchOn, Touch:
          self.failure = true;
          if (child(interfacecube) == 0 && child(specimencube) == 0) "At the moment there is nothing placed in the cubes, so there is no point in operating the computer.";
          if (children(interfacecube) > 1 || children(specimencube) > 1) "Error: The computer is not able to properly analyze the content. Each cube may only hold one single object.";
          if (child(interfacecube) ~= 0) {
            if (strangerobotspider in interfacecube) {
              if (io.upgrade_status < 1 || io.learnedPositronics == false) "Interface cube report: The content is alien robot technology, initiating hacking sequence failed.^^Io approaches you while you're looking at the lab computer: ~I think I could help you hacking the strange spider robot but for this I need to be able to connect to the alien technology itself and I also need basic knowledge about it.~ Io might be an option. Maybe you should try again later, once you had more progress on the alien ship.";
              print "Interface cube report: reprogramming of the alien robot unit successfully completed.^^Without Io's positronics knowledge and the alien technology connector upgrade he had, this would have never been possible. You saw him connecting to the robot spider when you initiated the hacking sequence on the lab computer.^";
              strangerobotspider.reprogrammed = true;
              score = score + 3;
              self.failure = false;
            }
            if (apparatus in interfacecube || obscuregem in interfacecube) {
              print "Interface cube report: The computer assumes this technology was made for transporting objects.^";
              self.failure = false;
            }
            if (connector in interfacecube) {
              print "Interface cube report: This is object allows foreign technology to connect to those of the aliens. Io could be upgraded with this.^";
              self.failure = false;
            }
            if (advancedtechnologyparts in interfacecube || droidspares in interfacecube) {
              print "Interface cube report: This technology is too advanced for the Polaris-7 lab. It may be used somewhere else.^";
              self.failure = false;
            }
            if (vibroknife in interfacecube) {
              print "Interface cube report: The vibro technology is known on Terra as well, though less advanced than this alien knife. You need to be careful or you might cut off a hand with it.^";
              self.failure = false;
            }
          }
          if (child(specimencube) ~= 0) {
            if (mummifiedhand in specimencube) {
              print "Specimen cube report: The computer would prefer non-contaminated material to properly analyze the mystery of what happened on the alien ship. The hand laid exposed in a quarter for thousands of years and is not the right object for this purpose.";
              if (mummifiedhand.regenerated == true) print " The fact it has been regenerated doesn't really make a difference.";
              new_line;
              self.failure = false;
            }
            if (vacutainer in specimencube) {
              if (vacutainer.blood_inside == false) "Specimen cube report: the vacutainer does not contain organic material.^";
              if (vacutainer.blood_inside == true) print "Specimen cube report: The analysis confirms that the circulatory system of the extra terrestrial individual was infected with a virus not unknown on Terra. It is a very early form of the influenza virus. However, it seems to have caused significantly more damage to the alien organism.^^The computer generated a vaccine based on the viral strain, which you take with you. Since you no longer need the vacutainer, you decide to place it in the lab freezer for later reference.^";
              move vaccine to player;
              move vacutainer to Limbo;
              update_moved = true;
              scope_modified = true;
              self.failure = false;
            }
          }
          if (self.failure == true) "None of the cubes seem to contain an object that makes sense being processed by the computer.";
          if (self.failure == false) rtrue;
    ],
    failure true,
  has scenery;

Object -> -> vaccine "vaccine"
  with  name 'vaccine',
    description "In the last centuries, virus research has reached many milestones. This vaccine, which is meant to be eaten, contains a messenger substance that can induce immunity within minutes, so that the virus strain found on the alien ship cannot harm you.",
    before [;
      Eat:
        score = score + 3;
        move self to Limbo;
        scope_modified = true;
        self.eaten = true;
        "You eat the vaccine. Afer a while you feel a slight dizziness so you wait for your body to process the messenger substance. It's just a short moment, then the effect is over, as if it never happened.";
    ],
  eaten false,
  has scored;

Constant CUBE_CLOSING "The top of the cube is always open, you cannot close it.";

Object ->  specimencube "specimen cube"

  with  name 'specimen' 'cube',
    description "The specimen cube is connected to the computer and meant for organic materials. Put something in, get magic out. So they say.",
    before [;
        Close:
          print_ret (string)CUBE_CLOSING;
    ]
  has transparent container open static;

Object ->  interfacecube "interface cube"
  with article "an",
    name 'interface' 'cube',
    description "The interface cube is connected to the computer and meant for technology. If you're into hacking, you gonna love this.",
    before [;
        Close:
          print_ret (string)CUBE_CLOSING;   
    ]
  has transparent container open static;

Object ->  medicinecabinet "medicine cabinet"
  with  name 'medicine' 'cabinet' 'equipment',
    initial "There is a medicine cabinet that contains the standard auxiliary equipment for astronauts.",
    description "You actually hope that you won't need any of this.",
    before [;
        Open, Search: 
          if (self.vacutube_needed == false) "You open it briefly to take a look inside but there is nothing in it you'd need right now.";
          move vacutainer to Laboratory;
          scope_modified = true;
          self.vacutube_needed = false;
          "The key to escape from this unfortunate situation may be found when understanding what happened on the alien ship. To further progress, you now need to analyze a few things. You take out one of the vacutainers and place it on the floor.";
        Close:
          "It is already closed.";
    ],
    vacutube_needed false,
  has static;

Object -> ->  vacutainer "vacutainer"
  with  name 'vacutainer' 'tube' 'sample',
    initial "On the floor you notice a vacutainer, suitable for collecting samples.",
    description [;
      print "The vacutainer allows collection of biological samples, which can be analyzed in the laboratory.";
      if (self.blood_inside == true) print " It currently contains the blood from one of the dead aliens you found in the large cryosleep hall.";
      if (self.blood_inside == false) print " It currently is empty.";
      new_line;
    ],
    before [;
        Open: 
          "You shouldn't contaminate it."; ! yes, why would you do that
        Close:
          "It already is closed and sealed.";
        Fill:
          if (player in HalloftheDead && purpleblood in HalloftheDead) {
            <<Take purpleblood>>;
          }
          "The right organic material needs to be present for the vacutainer.";
        PutOn:
          if (second == purpleblood) <<Take purpleblood>>;
    ],
    blood_inside false,
  has scored;

Room  StorageSpace "Storage Space"
  with  description
            "You stare at the most unspectacular location ever integrated into a spaceship. Naked walls and steel shelves convey unprecedented sterility. The best thing about this interstellar broom closet is that you can leave it to port.",
        w_to UpperCorridor,
        cheap_scenery
            'storage' 'space' MESS_SCENERY
            '1' 'location' MESS_SCENERY
            'broom' 'closet' "You really don't like this place."
            'steel' 'shelves' "You see absolutely nothing of interest on these shelves.",
   has  light scored;

! the famous source of light which you know from many adventure games
Object ->  flashlight "flashlight"
  with  name 'flashlight',
    describe "^A flashlight lies on the floor.", ! describe is a workaround, when_on/when_off is recommended
    description [;
        ! we want the object having different descriptions for ON and OFF state
        print "It is a heavy-duty astronaut flashlight, ";
        if (self hasnt on) "currently off.";
        "shining brighter than Sirius.";
    ],
    before [;
        Drop:
          if (location == thedark) "It's not a good idea to drop your only source of light in the dark.";
        SwitchOff:
          if (flashlight in ShipHangar) "It won't be a good idea to switch off your only source of light here while not carrying it. You won't be able to find it again and this area would become inaccessible for you.";
    ],
    after [;
        ! we make the light property depending on whether it is switched ON or OFF
        SwitchOn: 
          give self light;
          scope_modified = true;
        SwitchOff: 
          give self ~light;
          scope_modified = true;
    ],
has switchable scored;

Object ->  toolbox "toolbox"
  with  name 'toolbox' 'astrobox' 'tools',
    initial "You can see your toolbox here. You already wondered where it could be.",
    description "The Astrobox(TM) includes just about every tool that the avid astronaut may need.",
    before [;
        Open, Search:
          "You don't need to open the toolbox in the game, for example to select a specific tool. When you directly want to manipulate an object with it, you may use it like this:^^[unscrew battery with toolbox] or^[disassemble computer with toolbox].";
        Close:
          "It's not necessary to close the toolbox. This is the future.";
    ],
  has scored;

Room  Privatearea "Private area"
  with  description
            "Two decades ago you left Sol for an uncertain journey through the cosmos. Despite the many years, it looks as if the place has just been abandoned. The equipment meets the standard for the Terran Polaris class, which means the hygiene module is nothing special but the bed is actually quite comfortable. You may go port to get back to the lower corridor.^^The messy desk next to the digital library can only be described as the epitome of chaos.",
        w_to LowerCorridor,
        cheap_scenery
            'equipment' 'place' MESS_SCENERY
            'hygiene' 'module' "20 years in hypersleep and no craving for a shower nor a toilet. The wonders of modern technology."
            '1' 'bed' "It's safe to say that you've slept more than enough for the time being and there is still a problem to solve.",
   has  light scored;

Object ->  messydesk "messy desk"
  with  name 'messy' 'desk' 'chaos',
    description "Such chaos is quite counterproductive in emergency situations.",
    before [;
        Push, Pull:
          "It's too heavy to move.";
        Search:
          if (~~(biometricpass in messydesk)) "You search again but don't find anything of interest this time.";
          move biometricpass to Privatearea;
          scope_modified = true;
          "You search for a while and finally find your biometric pass, the enemy of all locked doors on this ship.";
    ],
  has scenery;

Object -> ->  biometricpass "biometric pass"
  with  name 'biometric' 'pass' 'passport',
    initial "There's your biometric pass on the desk.",
    description "The biometric passport is a small key card that gives you access to all systems and areas on the Polaris-7.",
    before [;
      Insert:
        ! the player should also be able to PUT IN the pass or INSERT it to unlock the door
        if (second == securitydoor) {
          <<Unlock securitydoor biometricpass>>;
        }
    ],
  has scored;

Object ->  digitallibrary "digital library"
  with  name 'digital' 'library',
    description "This is where the concentrated knowledge of humanity is at your disposal for research.",
    before [;
        Open, SwitchOn, Touch:
          if (self.topic_cuneiform == true || self.topic_positronics == true) {
            print "At the moment the following topics are available for research:^^";
            if (self.topic_cuneiform == true) print "- Cuneiform^";
            if (self.topic_positronics == true) print "- Positronics^";
            new_line;
            print "You can add the knowledge to Io's libraries with [research topic].^";
            rtrue;
          }
          "At the moment there are no topics available to research.";
        SwitchOff:
          print_ret (string)MESS_NOWAYOFF;
    ],
    topic_cuneiform false,
    topic_positronics false,
  has scenery;

Outside  AlienShipEntrance "Alien Vessel (Entrance)"
  with  description
            "You're in outer space. Fragments of stardust shine like a sea of fireflies, illuminated by a shimmering light that emanates from an opened hatch fore. Majestic and awe-inspiring, the alien vessel is drifting right in front of you. We always assumed we are not alone, now here is evidence. Float up to return to the Polaris-7. Further starboard something seems in motion.",
        n_to SphereRoom,
        e_to AlienShipHull,
        u_to Airlock,
        cheap_scenery
            '1' 'ship' SCN_EX_VESSEL
            'fragments' 'stardust' "Millions of tiny particles, on their way through space for eons, long before man was drawn into the cosmos."
            'shimmering' 'light' "The light somehow has a comforting effect on you."
            'alien' 'vessel' "Why is it here for so many years? Is it stranded? The sheer size overwhelms you."
            'outer' 'space' "You have to admit that this is not exactly the final frontier experience you were expecting."
            'opened' 'hatch' "Why is it open? Has it been opened for you? Is this an invitation?"
            '1' 'something' SCN_EX_HULL
            'Polaris-7' 'Polaris' "How small the Polaris is compared to the alien ship. And the Polaris class is massive judging by Terran standards.",
   has  light scored;

[SCN_EX_HULL;
    print (string)MESS_GO_LANDMARK, "and drift starboard.^";
  <<Go FAKE_E_OBJ>>;
];

Outside  AlienShipHull "Alien Vessel (Hull)"
  with  description
            "It seems like there is nowhere else to go from here other than port. No distinctive points, no conspicuous features just the endless expanse of the hull.",
        w_to AlienShipEntrance,
        cheap_scenery
            '1' 'ship' SCN_EX_VESSEL
            'alien' 'vessel' SCN_EX_VESSEL
            'hull' 'material' "The millennia do not seem to have affected the ship much. Everything looks like new. The material, from whatever the hull was made of, seems to be more resistant than anything you know."
            'endless' 'expanse' "This vessel is so huge that its construction was most likely done in space and not on a planet. But who were the builders?",
        talk_status 0, ! some conversations with Io are location based and tracked in the location itself
   has  light scored;

Constant SCN_EX_VESSEL "You still can't believe this is real.";

Object ->  rushingmechanicalspiders "mechanical arachnids"
  with  name 'mechanical' 'spiders' 'arachnid' 'arachnids//p', 
    initial "Mechanical arachnids rush all over the vessel. You believe they might have a maintenance function.",
    description "Isn't it ironic that you meet your ultimate nemesis so far from Terra? Spiders in all forms are an abomination to you, even when they are artificial creatures like in this case. These clearly seem to have a maintenance purpose.",
  before [;
      Take, Touch, Turn, Push, Pull, Rub:
        "The mechanical arachnids seem pretty harmless but they are way too fast so you can't just touch one or pick it up with your hands. You need to be a bit more creative.";
      Attack:
        if (second == laserrifle && laserrifle.weapon_mode == 0) {    ! paralyze mode
          if (self.paralyzed == true) print_ret (string)MESS_NONEEDAGAIN; ! Why doing again?
          move strangerobotspider to AlienShipHull;
          scope_modified = true;
          self.paralyzed = true;
          score = score + 3;
          "You shoot a spider that catches your eye for some reason. Paralysis sets in immediately. As it slowly drifts towards you, you notice that it is completely different from the smaller maintenance counterparts.";
        }
        if (second == laserrifle && laserrifle.weapon_mode == 1) {    ! disintegrate mode
          if (self.killed == true) print_ret (string)MESS_NONEEDAGAIN; ! Early return, one time is enough.
          move advancedtechnologyparts to AlienShipHull;
          scope_modified = true;
          self.killed = true;
          score = score + 3;
          "The moment you shoot one of the maintenance arachnids with your laser rifle in disintegration mode, it falls apart into small pieces of advanced technology.";
        }
        else {
          if (verb_word == 'shoot' && laserrifle in player && second == false) {
            print "(with the laser rifle)^";
            <<Attack rushingmechanicalspiders laserrifle>>;
          }
          "You're on the right track but be more specific. It could also be that you are missing the right item.";
        }
  ],
  paralyzed false, ! custom properties allow us to track the player's progress on the spider object
  killed false,
  has pluralname static;

! This is Vlad. You won't find out much about him here but you'll know him better in the Hibernated 1 Addon 
! "Eight Feet Under" and he is going to be Olivia's sidekick in Hibernated 2. The cutest killer in the universe.
Object -> ->  strangerobotspider "strange spider robot"
  with  name 'strange' 'spider' 'robot' 'vlad',
    initial "A strange spider robot drifts near you.",
    description "This particular spider looks very different to the other ones on the hull of the alien ship. It is way bigger, almost the size of a cat, and in a certain way it even seems omnious. That's very strange. What is this thing?",
    reprogrammed false, ! you cannot communicate with Vlad if you don't reprogram him
    before [;
        Insert, PutOn:
          if (second == maintenanceshaft) {
            if (grille.screwed == true) "A good idea. The spider could definitely fit into the maintenance shaft. This is no option though as long as the shaft is covered by the grille.";
            if (self.reprogrammed == false) "You place the spider near the shaft and point to the entrance. Instead of crawling in there, it gesticulates frantically and speaks in a language you don't understand. It almost seems as if the little thing is scolding you. There must be a way making it understand you, possibly with the capabilities of the Polaris-7 lab. You take the spider with you again.";
            if (self.reprogrammed == true) {
              give plasmabarrier ~on;
              move self to limbo;
              scope_modified = true;
              score = score + 3;
              "You place the robot spider near the maintenance shaft and immediately it points one of its spider legs at you: ~Were you idiots going to drag me around all day? If you hadn't paralyzed me outside on the ship's hull, you could have saved yourselves a lot of work here. But no, let's shoot at everything that's running around. I'd love to fillet you with a laser, but there's no time for that now. Let me take care of the barrier and you should go to the bridge. The navigator is very weak and won't make it much longer.~^^Without another word, the strange robot spider vanishes into the maintenance shaft. After a few minutes you hear a hissing sound in the wall, then the plasma barrier is deactivated.";
            }
          }
        Drop:
          if (location == CreepyPassage) <<Insert strangerobotspider maintenanceshaft>>;
    ],
  has scored;

Object -> -> advancedtechnologyparts "advanced chipset parts"
  with  name 'advanced' 'chipset' 'parts',
    article "some",
    initial "You see some advanced chipset parts from the mechanical spider you disintegrated.",
    description "Looks like parts from a very advanced chipset. It seems to be a positronic technology, which we only know theoretically.",
  has pluralname scored;

Room  SphereRoom "Sphere Room"
  with  description
            "The glow that you noticed outside comes from a sphere in the middle of this room. What is the purpose? Could it be for transportation, which would make sense in an entrance area like this? An obvious exit is port. The passage starboard leads to a corridor. The hatch aft leads back to space. There seems to be an invisible shield that keeps the atmosphere in the ship.",
        s_to AlienShipEntrance,
        e_to GloomyCorridor,
        w_to ControlRoom,
        cheap_scenery
            'room' 'ship' MESS_SCENERY
            'obvious' 'exit' MESS_LANDMARK
            'entrance' 'area' "This is an interesting place. You wonder what this place is meant for."
            'passage' 'corridor' MESS_LANDMARK
            'hatch' 'space' MESS_LANDMARK
            '1' 'floor' MESS_SCENERY
            'invisible' 'shield' "That's definitely superior to anything you would find on a human spaceship. You wonder how this works.",
        talk_status 0,
   has  light scored;

Object ->  sphere "sphere"
  with  name 'glow' 'sphere',
    description "The sphere levitates. It seems to pulsate slightly, barely noticeable. For some reason you feel drawn to it.",
    before [;
        Touch, Rub:
          if (self.touched == true) "The sphere recedes from you. Apparently it has served its purpose.";
          sphere.touched = true;
          score = score + 3;
          move apparatus to SphereRoom;
          move obscuregem to SphereRoom;
          scope_modified = true;
          "The moment you touch the sphere, an apparatus and an obscure gem materialize in front of you.";
    ],
    touched false,
  has scenery;

Object -> -> obscuregem "obscure gem"
  with  name 'obscure' 'gem',
    article "an",
    initial "You notice an obscure gem, currently glowing similar to the sphere.",
    description [;
        print "This gem appeared right after you touched the sphere. ";
        if (self.glowing == false) print_ret "It currently is not glowing.";
        "It currently is glowing.";
    ],
    after [;
        Take:
          self.glowing = false;
          "The moment you picked up the gem, it stopped glowing. You put it in your pocket.";
        Drop:
          self.glowing = true;
          if (location == AlienShipEntrance or AlienShipHull) "You let the gem go. It drifts in space and immediately starts glowing similar to the sphere."; 
          "You place the gem on the ground. It immediately starts glowing similar to the sphere.";
    ],
    glowing true,
  has scored;

Object -> ->  apparatus "apparatus"
  with  name 'mysterious' 'apparatus' 'device',
    article "an",
    initial "A mysterious apparatus lies on the floor.",
    description "This apparatus appeared after you touched the sphere. There is a little knob on it, obviously allowing to control the device. You can see icons next to the knob.",
  has transparent scored;

Object -> -> -> knob "knob"
  with  name 'knob' 'icon' 'icons',
    description "On the left side of the knob, there is an icon that resembles the obscure gem, on the right side of the knob there is an icon that resembles the sphere. This is fascinating.",
    before [;
        Push, Pull:
          "It seems the knob can only be turned.";
        Turn:
          "You need to be more specific and turn it either left or right.^^[turn knob left/right]";
    ];

Room  GloomyCorridor "Gloomy Corridor"
  with  description
            "Monotonously, the corridor stretches deeper port and starboard into the bowels of the alien ship.",
        e_to BaseStation,
        w_to SphereRoom,
        cheap_scenery
            'gloomy' 'corridor' MESS_SCENERY
            'rainbow' 'badge' "You're sure that you've seen that before. Somewhere. A long time ago."
            'basic' 'prompt' "This pretty much looks like on a human 8-bit computer.",
        talk_status 0,
   has  light scored;

Object -> victorterminal "small terminal"
  with initial "A small terminal is embedded into the wall.",
    parse_name [ n;
      n=0;
      while (NextWord()==
      'terminal' or 'small' or 'blue' or 'screen' or 'computer') {n++;}
      return n;
    ],
    description "The small terminal somehow looks like it doesn't belong here. It greets you with a rainbow badge, a blue screen and a BASIC prompt. What a strange, anachronistic computer this is.",
    before [;
        Open, SwitchOn, Touch:
          "It seems the rainbow badge terminal needs a code to process something [type 1234 into/on terminal].";
    ],
  has static;

Constant DROIDS_BASE_STATION "They look quite similar to human androids, although these are significantly more advanced.";

Room  BaseStation "Base Station"
  with  description
            "The area appears to be a station for service droids. Many of the humanoid robots are twitching on the ground. It seems this ship has been abandoned for ages. Malfunctions such as these would occur over time. There are exits fore and port.",
        n_to Quarters,
        w_to GloomyCorridor,
        cheap_scenery
            'base' 'station' MESS_SCENERY
            '1' 'area' MESS_SCENERY
            'service' 'droids' DROIDS_BASE_STATION
            'exits' 'exit' MESS_LANDMARK
            'humaniod' 'robots' DROIDS_BASE_STATION,
        talk_status 0,
   has  light scored;

! this is an example of an object which is changed by actions at runtime
Character ->  aggressivedroid
  with  name 'aggressive' 'droid' 'destroyed' 'disintegrated',
    short_name "aggressive droid",
    initial "Your gaze falls on a particularly aggressive droid that is making his rounds here.",
    description "He moves ponderously and can't really be dangerous to you, but you feel you should take him out anyway.",
    before [;
        Take:
          if (self has animate) "Yeah, sure. You must have hit your head somewhere.";
          "You cannot take the whole droid with you but if you disassemble it, you could probably get some spares out of it.";
        Attack:
          if (verb_word == 'shoot' && laserrifle in player && second == false) {
            print "(with the laser rifle)^";
            <<Attack aggressivedroid laserrifle>>;
          }
          if (second == laserrifle && laserrifle.weapon_mode == 0) {    ! paralyze mode
            "You shoot but the paralyze mode doesn't really affect the droid.";
          }
          if (second == laserrifle && laserrifle.weapon_mode == 1) {    ! disintigrate mode
            if (self.destroyed == true) print_ret (string)MESS_NONEEDAGAIN; ! Early return, one time is enough.
            give self ~animate; ! boo you're dead!
            self.destroyed = true;
            self.short_name = "disintegrated droid"; ! not necessary here but nice for you to know
            self.initial = "A disintegrated droid lies on the ground, fatally hit by your laser rifle.";
            self.description = "One shot was enough to destroy it. You wonder if you could use some of the droid parts as spares if you disassemble it.";
            score = score + 3;
            "You shoot the droid with your rifle in disintegration mode. Severly hit, it goes down.";
          }
          if (self.destroyed == false) "Yes, attacking the droid is a good idea but make sure you keep your distance and take care of having the right weapon with you.";
          else "You already did your best here.";
        Turn:
          if (verb_word == 'turn') rfalse;
          "You probably want to be more specific.^^[unscrew droid with object]";
    ],
  destroyed false,
has neuter animate;

Object -> -> droidspares "droid spares"
  with  name 'droid' 'spare' 'spares' 'parts',
    article "some",
    initial "The ground is covered with droid spare parts.",
    description "These spares come from the disintegrated droid you shot at the Base Station. If you ever stumble upon a broken droid: you might be able to fix it.",
  has pluralname scored;
  
Room  Quarters "Quarters"
  with  description
            "A cold shiver runs down your spine as you approach a crew quarters, very similar to those you'd expect on a human spacecraft. The dust-covered room leaves a desolate impression. Whoever was here is long gone. The more you see, the more you fear that death may be the only thing waiting here for you, underneath the surface, lurking in the dark. There are exits fore or aft.^^A locker somehow attracts your attention.",
        n_to SickBay,
        s_to BaseStation,
        cheap_scenery
            'crew' 'quarters' MESS_SCENERY
            'dust-covered' 'room' MESS_SCENERY
            '1' 'dust' "You always wondered where dust comes from in space."
            'exit' 'exits' MESS_LANDMARK
            '1' 'scratches' "It seems that the locker has been moved once before. Maybe someone was looking for something.",
   has  light scored;

Object ->  locker "locker"
  with  name 'locker',
    description "The locker doesn't look strange at all, it's actually rather familiar. You notice a few scratches around it.",
    before [;
        Open, Search:
          "You open the locker only to find out it's empty. That's absolutely disappointing. On the other hand, what did you expect to discover? Alien underwear? Disappointed you close it again.";
        Close:
          "It is already closed.";
        Push, Pull:
          if (self has moved) print_ret (string)MESS_NONEEDAGAIN; ! no need to move it a second time
          move idchip to Quarters;
          give self moved;
          scope_modified = true;
          score = score + 3;
          "The locker is heavier than you thought it would be, but you manage to move it a few centimeters and reveal an ID chip.";
    ],
  has scenery;

Object -> ->  idchip "ID chip"
  with  name 'ID' 'chip',
    article "an", 
    initial "The ID chip of a crew member is lying on the floor.",
    description "This looks like some kind of ID chip. The outline of the spaceship is engraved on it but there is neither a photo, nor symbols, nor any writing visible. The actual purpose is therefore not directly recognizable.",
    before [;
        Insert:
          "You feel that's not the right object to put the ID chip into.";
    ],
  has scored;

Room  SickBay "Sick Bay"
  with  description
            "This facility far surpasses Terran technology. All walls seem to be made of an unknown red metal. The color may have had a calming effect on the alien builders. With such equipment, a good medic might work wonders. Exits lead fore and aft.",
        n_to RegenerationChamber,
        s_to Quarters,
        cheap_scenery
            'sick' 'bay' MESS_SCENERY
            '1' 'facility' MESS_SCENERY
            'red' 'metal' "This is fascinating. You'd love to properly analyze this. For the moment, you have other priorities. It would probably be impossible to get a sample of it anyway."
            'small' 'table' "It's just a regular table, nothing unusual."
            'exit' 'exits' MESS_LANDMARK
            '1' 'color' "Well... it's red.",
   has  light scored;

Object ->  equipment "equipment"
  with  name 'equipment',
    description [;
        print "Much of this stuff is pretty useless to you since you don't know how to handle it.";
        if (self.searched == false) print " Taking a closer look would likely make sense though.";
        new_line;
    ],
    before [;
        Search:
          if (self.searched == true) print_ret (string)MESS_NONEEDAGAIN;
          self.searched = true;
          move vibroknife to SickBay;
          scope_modified = true;
          score = score + 3;
          "Your first impression is quickly confirmed. Many of these objects won't get you anywhere because you simply don't have the knowledge to deal with them. On a small table, however, you find something very similar to a Terran vibro knife.";
    ],
  searched false,
has scenery;

Object -> ->  vibroknife "vibro knife"
  with  name 'vibro' 'knife' 'blade',
    initial "On a small table, you notice a vibro knife.",
    description "A knife with a humming, vibrating blade, that cuts like a hot knife through butter.^^You can cut something with [cut object with vibro knife].",
    before [;
        Attack, Cut:
          "Cut something with [cut object with vibro knife].";
    ],
  has scored;

Room  RegenerationChamber "Regeneration Chamber"
  with  description
            "The spacious area, which appears sterile in a certain way, is dominated by tall tubes rising vertically to the ceiling. Thousands of statuses are visualized on the displays behind them, flickering gently, almost hypnotically. The sole exit leads aft.^^A tube in your immediate vicinity seems to be activated and shines in a friendly rich green.",
        s_to SickBay,
        cheap_scenery
            'spacious' 'area' MESS_SCENERY
            'regeneration' 'chamber' MESS_SCENERY
            'tall' 'tubes' SCN_TUBES
            'sole' 'exit' MESS_LANDMARK
            '1' 'ceiling' "Nothing special about the ceiling."
            'rich' 'green' "That's the most beautiful green you've ever seen. It's so vibrant."
            'statuses' 'displays' "Unfortunately, you can't read what you see on the displays.",
        talk_status 0,
        before [;
            Insert: ! for any object to respond to the tube in some way, we override INSERT at the location
              if (second == tube) {
                if (tube hasnt open) "For now you are not even considering if this would make sense, because the tube is not open so there is no way of putting something into it.";
                if (noun == mummifiedhand) {
                  if (mummifiedhand.regenerated == true) { print_ret (string)MESS_NONEEDAGAIN; }
                  move mummifiedhand to tube;
                  tube.handinside = true;
                  give tube ~open;
                  scope_modified = true;
                  mummifiedhand.short_name = "regenerated hand";
                  mummifiedhand.regenerated = true; ! this will change a lot in the object itself
                  "You place the cut-off hand inside the tube which closes immeditaly. Then you notice the hand seems to be regenerating. You watch the process with fascination. After a few minutes, the tube has completely restored the hand.";
                }
                "That's likely not a good object for the tube so you decide against it.";
              }
              rfalse;
        ],
   has  light scored;

! scenery objects can be a routine as well
[SCN_TUBES;
  print "Most of them seem to be deactivated for some reason. Since they are transparent you can see that they are all empty";
  if (tube.handinside == true) print " except for the one tube where you put the cut-off hand in";
  ".";
];

Object ->  tube "tube"
  with  name 'tube',
    description [; ! crafting the respone based on the status of the object's properties
        print "There is not much difference between this tube and the others except this one is activated";
        if (self has open) print " and open";
        if (self.handinside == true) print " and it also contains the cut-off hand which you placed inside";
        print "."; 
        new_line; rtrue;
    ],
    before [;
        Search: 
          "You take a closer look but still don't find anything you hadn't seen before.";
        Open:
          if (self.openedbefore == false) "You see no apparent way to open the tube."; ! how to "learn" something
          <<Touch tube>>;
        Close: 
           if (self has open) "There is no obvious way to close the tube. You guess that it closes automatically once you put the right object into it.";
           "The tube is already closed";
        Touch:
          if (self has open) "You touch the tube again but it already is open, which likely is the reason why nothing happens.";
          self.openedbefore = true;
          give self open;
          scope_modified = true;
          print "As you touch it, part of its glass front dematerializes. The tube is now open and";
          if (self.handinside == false) print " you assume that you could actually put something in it.";
          if (self.handinside == true) print " you could take out the cut-off hand.";
          new_line; rtrue;
        Enter:
          print "You consider it for a moment but you generally don't think that's a good idea. You don't really know what the tube does and it likely is tuned to work with alien DNA.";
          if (self hasnt open) print " The tube is not open anyway.";
          new_line; rtrue;
        Push, Pull:
          "It's way to heavy, you can't move the tube.";
    ],
    openedbefore false,
    handinside false,
  has transparent scenery;

Constant STRANGE_SYMBOLS "You definitely can't read them but these symbols are familiar to you.";

Room  ControlRoom "Control Room"
  with  description
            "This must be some kind of hub in the ship's data network. Both technology and logic are likely to differ markedly from Terran standards. At least some beeping noises and a subliminal humming create a feeling of familiarity. You can leave this place by going fore or starboard.",
        n_to VideoSurveillance,
        e_to SphereRoom,
        before [;
          Insert: 
            if (second == littleslot or smallterminal) {
              if (second == smallterminal) print "(assuming you mean the slot)^"; ! manual parser improvement
              if (ControlRoom.talk_status < 3) "It is not safe to put something into the slot before you know the actual purpose of the terminal."; ! the user should know first what he does
              if (noun == player) <<Enter littleslot>>; ! see comment under ENTER to learn a bit about parser logic
              if (noun == idchip) {
                if (idchip in littleslot) "That's where it already is.";
                move idchip to littleslot;
                scope_modified = true;
                glassslab.powered = true;
                if (mummifiedhand.regenerated == true && mummifiedhand in glassslab) {
                  give massivedoor open;
                  give massivedoor ~locked;
                  scope_modified = true;
                }
                "The ID chip fits perfectly into the slot. A signal is heard, telling you that something has been triggered by your action, but you are not able to see what this might be, so you believe it happened somewhere else.";
              }
              print_ret (The) noun, " is not the right object for the slot.";
            }
          Take, Pull:
            if (idchip in littleslot) {
              move idchip to player;
              update_moved = true;
              scope_modified = true;
              glassslab.powered = false;
              if (mummifiedhand.regenerated == true && mummifiedhand in glassslab) {
                  give massivedoor ~open;
                  give massivedoor locked;
                  scope_modified = true;
                }
              "You pull the ID chip out of the slot and put it back into your pocket. This time no signal is heard, but that doesn't necessarily mean nothing's changed now.";
            }
          Enter: ! if you want to PUT YOURESELF INTO SOMETHING, Puny's parser translates this to ENTER
            if (noun == littleslot) "All diets in the universe could never make it possible that you fit into this slot.";
        ],
        cheap_scenery
            'control' 'room' MESS_SCENERY
            '1' 'hub' "The data streams generated by a ship large and complex as this must be enormous."
            'beeping' 'noises' "If you create technology that advanced, why make it beep? This feels quite retro-futuristic."
            '1' 'screen' STRANGE_SYMBOLS
            'strange' 'symbols' STRANGE_SYMBOLS
            'metallic' 'pedestal' "It is symetrically shaped, very beautiful and minimalistic. Judging by the height, you suppose there is no significant difference in size between the alien builders and humans."
            'subliminal' 'humming' "You have no idea where this is coming from.",
        talk_status 0,
   has  light scored;

Object -> logictech "technology in this room",
  with name 'logic' 'technology',
    description "You'd love to take a closer look but it certainly would take years to study the logic behind this.",
  has scenery;

Object ->  smallterminal "small terminal"
  with  name 'small' 'terminal' 'computer',
    initial "On a metallic pedestal you see a small terminal computer.",
    description "This small terminal computer is actually quite similar to its Terran counterparts, not considering the strange symbols seen on the screen. You notice a little slot which you guess could be for storage media.",
    before [;
        Open, SwitchOn, Touch:
          "There is no obvious way to operate the terminal.";
        SwitchOff:
          print_ret (string)MESS_NOWAYOFF;
    ],
  has transparent static;

Object -> -> littleslot "slot"
  with  name 'little' 'slot',
    description [;
      if (idchip in self) "There's an ID chip in it.";
      "The slot is empty.";
    ],
  has transparent static;

Room  VideoSurveillance "Video Surveillance"
  with  description
            "You feel watched, even though you are the observer here. A variety of cameras gives you an insight into numerous places, mainly locations where you have been before. One particular monitor somehow catches your eye. You may leave by going fore, aft, port and starboard.",
        n_to CargoBay,
        s_to ControlRoom,
        e_to Checkpoint,
        w_to SmallQuarter,
        cheap_scenery
            'variety' 'cameras' "Everything seems abandoned, very strange."
            'numerous' 'places' MESS_SCENERY
            'energy' 'cell' "That was a great find."
            'locations' MESS_SCENERY,
   has  light scored;

Object ->  surveillancemonitor "surveillance monitor"
  with  name 'surveillance' 'monitor',
    description [;
        if (flashlight in ShipHangar && flashlight has on) {
          print "You clearly recognize the ship hangar on the screen. It was a good idea leaving the flashlight there, because now you know the monitor was not broken.";
          if (energycell hasnt moved) print " From this point of view you notice something that could be an energy cell, right underneath the wing of a starfighter.";
          if (energycell in arrowstarfighter) {
            move energycell to ShipHangar;
            scope_modified = true;
          }
          new_line; rtrue;
        }
        "This monitor shows a black screen. Strange. Maybe it's broken?";
    ],
  has scenery;

Room  SmallQuarter "Small Quarter"
  with  description
            "A long time ago, the Grim Reaper took the immortal soul of the poor creature whose remains now linger on the bed. The corpse could be a security guard, as the proximity to the video room suggests. A door leading starboard is the only exit.",
        e_to VideoSurveillance,
        cheap_scenery 
            '1' 'door' MESS_LANDMARK
            'grim' 'reaper' "He's not around you hope. And suddenly that one song is stuck in your head: ~All our times have come, here but now they're gone...~"
            'blue' 'skin' "This is absolutely fascinating."
            '1' 'bed' "Of all beds on this ship, this is the one you would not consider for a nap." ! Yep. 
            'door' 'exit' MESS_LANDMARK,
        talk_status 0,
   has  light scored;

Character ->  body "body"
  with  description "At first glance, the species looks much like humans, but differences are difficult to recognize since the alien body is already mummified. The blue skin though is very distinctive.",
    parse_name [ n; ! too many synonmys for a Z3 game, so we use Inform's ParseName feature
		  n=0;
		  while (NextWord()==
      'corpse' or 'alien' or 'body' or 'remains' or 'poor' or 'creature' or 'security' or 'guard') {n++;}
		  return n;
    ],
    before [;
        Take:
          "Nope. At least not the whole body.";
        Push, Pull, Touch:
          "A certain part of this alien corpse might be helpful but you can't just tear it off.";
        Attack:
          if (verb_word == 'attack') "You could progress here if you'd refine the thought you just had.";
          if (second == laserrifle) "That's probably not a good idea. In disintegrate mode, the laser rifle would burn away much of the body and paralyze mode is ineffective since the target is already dead.";
          if (second == vibroknife) {
            if (mummifiedhand in body) {
              move mummifiedhand to SmallQuarter;
              scope_modified = true;
              score = score + 3;
              "You cut off one of the hands. Let's hope that your intuition is right.";
            }
            "One hand is more than enough.";
          }
        Cut:
          if (second == false && vibroknife notin player) "A good idea but you need something to cut the body.";
          if (second == false && vibroknife in player) {
            print "(with the vibro knife)^";
            <<Attack body vibroknife>>;
          } 
          if (second == vibroknife) <<Attack body vibroknife>>;
    ],
  has scenery;

Object -> -> mummifiedhand ! this object got way more complicated than I thought it would be
  with  name 'mummified' 'regenerated' 'cut-off' 'hand',
    short_name "mummified hand",
    initial "The mummified hand you cut off fell to the floor. Considering corpse mutilation wasn't part of the Terran astronaut program, you're doing pretty well.",
    description [; ! the hand's object description is based on our custom property
      print "You cut off this hand from an alien corpse that likely died hundreds if not thousands of years ago. ";
      if (self.regenerated == false) "It is mummified. And how is your day going?";
      if (self.regenerated == true) "The tube in the regeneration area has completely restored the original state.";
    ],
    before [;
      Take:
        if (self in glassslab && massivedoor has open) {
          move mummifiedhand to player;
          give massivedoor ~open;
          give massivedoor locked;
          update_moved = true;
          scope_modified = true;
          "You pick up the hand. The massive door closes again.";
        }
        if (self in glassslab && massivedoor has locked) {
          move mummifiedhand to player;
          update_moved = true;
          scope_modified = true;
          "You pick up the hand.";
        }
        if (self in tube && tube hasnt open) {
          "You need to open the tube first.";
        }
        if (self in tube && tube has open) {
          move mummifiedhand to player;
          update_moved = true;
          scope_modified = true;
          "You take the completely regenerated hand with you. This day really is the gift that keeps on giving.";
        }
        rfalse;
      PutOn, Insert:
        if (second == glassslab) {
          print "You place the hand on the glass slab.";
          move mummifiedhand to glassslab;
          scope_modified = true;
          if (self.regenerated == true && glassslab.powered == true) {
            if (massivedoor has locked) print " A signal noise is heard and the door opens.";
            give massivedoor ~locked;
            give massivedoor open;
            scope_modified = true;
          }
          new_line; rtrue;
        }
        if (second == specimencube) rfalse;
        if (second == scanner) {
            if (scanner.authorized == true) print_ret (string)MESS_NONEEDAGAIN; 
            score = score + 3;
            redbutton.glowing = true;
            scanner.authorized = true;
            "As soon as you place the alien hand on the scanner, the red button starts to glow. You think that you have successfully activated the elevator.";
        }
        "That's probably not the right object for placing the hand.";
    ],
    regenerated false,
  has scored;

Room  CargoBay "Cargo Bay"
  with  description
            "You wonder how busy it must have been here back in the days when the spacecraft was in full operation. The incredible dimensions of this place take your breath away. As far as the eye can see there are containers, metal boxes and heavy machinery to move them. The video room lies aft.",
        s_to VideoSurveillance,
        cheap_scenery 
            'writing' 'cuneiform' "The fact that cuneiform writing is found on this spaceship certainly raises some fundamental questions."
            '1' 'screen' "A flat computer screen similar to what you'd find on a Terran spacecraft."
            '1' 'containers' "It would certainly take months to check them all."
            'metal' 'boxes' "You are wondering what metal this is. It makes a sturdy impression."
            'heavy' 'machinery' "This stunning machinery sparks another thought in you. A ship as large as this could never have been built on a planet. It was most likely constructed in space."
            '1' 'area' MESS_SCENERY
            'video' 'room' SCN_EX_VIDEOROOM
            'incredible' 'dimensions' "This is absolutely stunning. Unbelievable!"
            '1' 'bay' MESS_SCENERY,
        talk_status 0,
   has  light scored;

[SCN_EX_VIDEOROOM;
    print (string)MESS_GO_LANDMARK, "and return to the video room.^";
  <<Go FAKE_S_OBJ>>;
];

Object ->  freightterminal "freight terminal"
  with  name 'cargo' 'terminal' 'computer',
    description "It doesn't look very spectacular. Just a regular terminal computer. The question is what can be achieved with it.",
    initial "Somewhat off to the side there is a cargo terminal, probably intended to control various functions in the area.",
    before [;
        Open, SwitchOn, Touch: 
          "You try to see if you get somewhere with the terminal but you're not able to operate the foreign technology yourself. Io is your only option.";
        SwitchOff:
          print_ret (string)MESS_NOWAYOFF;
    ],
  has static;

Object -> -> connector "positronic connector"
  with  name 'positronic' 'connector',
    initial "There is a positronic connector on the floor. You're still wondering where it came from.",
    description "The connector is round, about 2 centimeters in diameter, and almost looks like a coin with a chipset stamped on it. It allows wireless connections to positronic interfaces. You assume that one side is magnetic, so that you just put it on devices where you see fit.",
    before [;
        PutOn, Insert:
          if (second == io) {
            move connector to Limbo;
            scope_modified = true;
            io.upgrade_status = 1;
            score = score + 3;
            "You place the connector on Io. It transforms into ember and melts into his surface. Seems like it wasn't magnetic after all.^^~That was a useful upgrade.~ he replies. ~I confirm I am still fully functional and I am now able to connect with positronic interfaces on the alien ship.~";
          }
          if (second == interfacecube) rfalse;
          "If you think about how the connector likely was used in the cargo bay of the alien ship, you come to the conclusion that it should definitely be put on Terran technology. Anyway, this is not the right object for the connector.";
    ];

Room  Checkpoint "Checkpoint"
  with  description
            "Most likely, you are in a secure area. The empty room may be deceiving. You have no doubt that you need to be very careful here because who knows what security measures are in place. An exit lies port.",
        n_to massivedoor,
        w_to VideoSurveillance,
        cheap_scenery
            '1' 'checkpoint' MESS_SCENERY
            'secure' 'area' MESS_SCENERY
            'empty' 'room' MESS_SCENERY
            '1' 'exit' MESS_LANDMARK  
            'gloomy' 'hall' SCN_GO_HALLOFTHEDEAD
            '1' 'passage' SCN_GO_HALLOFTHEDEAD,
        before [;
            PutOn, Insert:
              if (noun ~= mummifiedhand && second == glassslab) print_ret "You try to place ", (the)noun, " on the slab but an invisible force prevents you from doing it. You guess it's not the right object to be put there.";
        ]
   has  light scored;

[SCN_GO_HALLOFTHEDEAD;
  ! if the player wants to examine something in the distance, you can make him go there
  if (massivedoor hasnt open) "You can't see something like that.";
  print (string)MESS_GO_LANDMARK, "enter the hall by going fore.^";
  <<Go FAKE_N_OBJ>>;
];

! doors in Inform can be a bit challenging, note Puny also has a "simple doors" feature (see wiki)
Object -> massivedoor "massive door"
	with  name 'massive' 'door',
    description [;
        if (self has open) "Your inital thought was right. It really was quite some effort opening it.";
        "You have a feeling it's going to be a challenge opening it. There are no handles, knobs, levers nor spots where you could place a key card.";
    ],
    when_closed "A massive door leading fore is blocking your way and suggesting it may only be passed by authorized individuals.",
    when_open "The massive door is open and you see that the passage fore is leading to a gloomy hall.",
		door_to HalloftheDead,
    before [;
        Open, Unlock:
          if (self has open) "It is already open.";
          if (second == mummifiedhand) "You hold the hand near the door and nothing happens. But you are onto something here.";
          "There is no obvious way to open it.";
        Close, Lock:
          if (self hasnt open) "Confucius says: you cannot close a door that is already closed, nor lock one that is already locked.";
          "You think about it but then decide it is better to keep the door open anyway.";
    ],
	has static door locked;

Object ->  glassslab "glass slab"
  with  name 'glowing' 'glass' 'slab' 'glow',
    initial [;
        if (self.powered == true) print "You notice a glowing glass slab floating vertically in the air, about one meter from the ground.";
        if (self.powered == false) print "You notice a glass slab lying on the ground.";
        if (mummifiedhand in self) print " There is a cut-off hand placed on it.";
        new_line;
    ],
    description [;
        print "The slab is rectangular. You estimate it to be 30 cm long and 20 cm wide. The thickness is probably around 3 cm.";
        if (self.powered == true) print " It's glowing and you wonder how that is possible because you can't see any technology inside the slab.";
        if (mummifiedhand in self) {
          print " The cut-off hand on it is not a pretty sight.";
          if (mummifiedhand.regenerated == false) {
            ! always good to throw hints in so that you get the player on the right track
            print " You feel you are on the right track but something is not right with the hand.";
          }
        }
        new_line;
    ],
    before [;
        Take:
          if (mummifiedhand in self) {
            print "(assuming you mean the cut-off hand)^";
            <<Take mummifiedhand>>;
          }
          "An invisible force keeps it where it is. You are not able to take the slab.";
    ],
    powered false,
  has transparent static;

Constant SCN_MASTERS_BUILDERS "They seem to be very similar to us. There is a theory saying that life always develops similarly when the right circumstances are given.";

Room  HalloftheDead "Hall of the Dead"
  with  description
            "Here they lie, the masters and builders who departed millenia ago to travel the great void. Who knows where they've come from and how far we might be from their home, here admidst the stars? Your heart beats fiercely as you stare at thousands of transparent reservoirs, all filled with humanoid beings. The hall extends several hundred meters towards the exits heading fore and aft.",
        n_to OppressivePlace,
        s_to [;
          if (massivedoor has open) return Checkpoint;
          "This passage is currently blocked.";
        ],
        cheap_scenery
            'transparent' 'reservoirs' "A breathtaking sight. There must be thousands of the builders of this ship lying here. You can barely see them through the liquid in the reservoirs, but what you can say for sure is that they are humanoid and have blue skin."
            'masters' 'builders' SCN_MASTERS_BUILDERS
            'humanoid' 'beings' SCN_MASTERS_BUILDERS
            '1' 'liquid' "Interesting. You assume it is some kind of nutrient solution."
            'blue' 'skin' "From an evolutionary point of view you wonder which environmental influences can lead to such a skin color."
            'exit' 'exits' MESS_LANDMARK
            '1' 'hall' MESS_SCENERY,
        talk_status 0,
   has  light scored;

! this is a simple  container object in Puny, quite nice how the lib handles it actually
Object ->  cryosleepcapsule "cryosleep capsule"
  with  name 'cryosleep' 'capsule' 'capsules' 'surface',
    when_closed "One cryosleep capsule is placed on the floor, tightly shut. Actually you spot quite a few of these in contrast to those on the walls. Something unexpected must have happened. There are definitely more capsules here than there should be.",
    when_open "One of the cryosleep capsules placed on the floor is currently open. The alien body that lies in it is now accessible to you.",
    description "The technology making this possible is far superior to anything we know from Terra. The shape of the capsule itself is beautiful and it hides the contents subtle but well.",
    before [;
        Open, Unlock, Touch:
            if (io.upgrade_status > 0 && io.learnedPositronics == true) {
              if (self has open) "You already opened it.";
              give self open;
              scope_modified = true;
              if (vacutainer in medicinecabinet) medicinecabinet.vacutube_needed = true;
              "You hesitate for a moment, thinking about how to open the capsule, when Io approaches you. ~Olivia, just touch it and I take care of the interface.~^^As you proceed the capsule opens and exposes an alien body.";
            }
            "There currently is no way to open the capsule. Maybe Io has an idea?";
        Close, Lock, Touch:
            if (self hasnt open) "It is already closed.";
            "Whatever you and Io did when the capsule was opened seems irreversible. You touch it again but it no longer closes.";
    ],
  has container transparent static;

Character -> ->  aliencorpse "alien body"
  with  name 'alien' 'body' 'species' 'contents',
    article "an",
    description [;
      if (cryosleepcapsule has open) {
        print "This body doesn't look like it's been dead for millenia, actually it doesn't look dead at all. Maybe the cold liquid in which they swim somehow preserves it. Astonishing and frightening how humanoid the species are, but there are differences of course, such as the blue skin for example.";
        if (medicinecabinet.vacutube_needed == true) print " Now you only need to find a way to analyze the cause of death."; ! throwing hints can never be bad
        new_line; rtrue;
      }
      "As long as the capsule is closed, you cannot see much of the alien body inside. Just a distorted shape, almost as if behind frosted glass.";
    ],
    before [;
        Attack:
          if (verb_word == 'attack') "You could progress here if you'd refine the thought you just had.";
          if (cryosleepcapsule hasnt open) "And how would you achieve to reach the body while the capsule is still closed?";
          if (second == vibroknife) {
            if (~~(purpleblood in aliencorpse)) "You already did that and there is absolutely no need cutting the alien body a second time. This is no slasher film. At least you hope that's the case.";
            move purpleblood to HalloftheDead;
            scope_modified = true;
            score = score + 3;
            "You cut the alien body with the vibro knife. Just a little bit, but enough to bleed purple blood.";
          }
        Cut:
          if (second == false && vibroknife notin player) "A good idea but you need something to cut the body.";
          if (second == false && vibroknife in player) {
            print "(with the vibro knife)^";
            <<Attack aliencorpse vibroknife>>;
          }
          if (second == vibroknife) <<Attack aliencorpse vibroknife>>;
    ],
  has static;

Object -> -> -> purpleblood "purple blood"
  with  name 'purple' 'blood' 'spot',
    initial "There is blood draining from the spot where you cut the alien body with the vibro knife.",
    description [;
      print "The blood has a strong purple color.";
      if (vacutainer.blood_inside == false) print " You'd love to analyze it further but need something to collect it.";
      new_line;
    ],
    before [;
      Take:
        if (vacutainer in player) {
          if (vacutainer.blood_inside == true) "You already filled the vacutainer with suitable organic material.";
          score = score + 3;
          vacutainer.blood_inside = true;
          "You use the vacutainer to collect a blood sample from the alien body.";
        }
        "You can't take this with your hands.";
      Insert:
        if (second == vacutainer) <<Take purpleblood>>;
      Fill:
        if (second == vacutainer) <<Take purpleblood>>;
    ],
  has static;

Room  OppressivePlace "Oppressive Place"
  with  description [; ! this is an example that alters the room description based on progress
            print "The corridor appears to widen here significantly and leads port into ";
            if (flashlight in ShipHangar && flashlight has on) print "a large hangar.";
            else print "the dark.";
            " Aft lies the hall with the dead masters and there also is a path leading starboard, although you can't see where it goes. Somehow the atmosphere is oppressive. Slowly you seem to be approaching the inner sanctuary of the ship.";
        ],
        s_to HalloftheDead,
        e_to Decontamination,
        w_to ShipHangar,
        cheap_scenery
            '1' 'corridor' MESS_SCENERY
            '1' 'path' MESS_LANDMARK
            '1' 'hall' SCN_GO_HALLAFT
            'large' 'hangar' SCN_GO_HANGAR
            'darkness' 'dark' SCN_GO_HANGAR,
   has light scored;

[SCN_GO_HALLAFT;
  print (string)MESS_GO_LANDMARK, "enter the hall by going aft.^";
  <<Go FAKE_S_OBJ>>;
];

[SCN_GO_HANGAR;
  print "head port.^";
  <<Go FAKE_W_OBJ>>;
];

Room  ShipHangar "Ship Hangar"
  with  description
            "The ship hangar is rather a city of its own with rows of interceptors and larger transport pods as far as the eye can see. A single spaceship like the one you are currently on could probably destroy entire worlds. The way starboard will guide you back to the oppresive place.",
        e_to OppressivePlace,
        in_to StarfighterInside,
        before [;
            Enter:
              if (noun == arrowstarfighter) <<Go FAKE_IN_OBJ>>;
        ],
        cheap_scenery
            'ship' 'hangar' MESS_SCENERY ! continue here
            '1' 'spaceship' MESS_SCENERY
            '1' 'way' MESS_LANDMARK
            '1' 'shield' SCN_EX_SHIELD
            '1' 'shape' "Beautifully symetric and at the same time subtly dangerous."
            'transport' 'pods' "You guess that even the smallest pod here is bigger than the Polaris-7.",
   has ~light scored;

[SCN_EX_SHIELD;
  if (energycell.screwed == true) "You cannot see the shield, you only feel it when you try to touch the energy cell.";
  "The shield seems to be gone now.";
];

Object ->  arrowstarfighter "arrow starfighter"
  with  name 'arrow' 'starfighter' 'interceptors' 'interceptor',
    initial "One of the arrow starfighters is right in front of you, ready to be entered, probably waiting for thousands of years to fly its next mission.",
    description "The arrow starfighter seems to be a fast interceptor made for combat in close proximity to the mother ship.",
  has static;

Object -> ->  energycell "energy cell"
  with  name 'energy' 'cell',
    article "an",
    initial "Right underneath the wing of the starfighter you notice an energy cell.",
    description "The energy cell seems to be the alien answer to a powerful battery. Pulsating electron swarms can be seen through its shell.",
    before [;
        Take, Touch:
          if (self.screwed == false) rfalse;
          if (self.shielded == true) "A shield protects the energy cell, you're not able to touch it.";
          "It seems to be screwed to the starfighter. You need tools to unscrew it.";
        Turn:
          if (verb_word == 'turn') "You cannot seem to turn it."; ! check for the explicit verb
          "You probably want to be more specific.^^[unscrew cell with object]";
    ],
    shielded true,
    screwed true,
  has scored transparent; ! transparent so that you can see the electron swarms inside

Object -> -> ->  electrons "electron swarms"
  ! this is a litte object that is embedded into another object... try taking the electrons in-game
  with  name 'swarms' 'electron' 'electrons' 'shell',
    description "This is fascinating to watch. You could lose yourself in there.",
  has pluralname static;

Room  StarfighterInside "Ship Hangar (in the starfighter)"
  with  description
            "The pilot seat is extremely comfortable. If not for the unusual symbols on the instruments, the starfighter could be considered a far human achievement. You feel like you're looking into the distant future with a crystal ball. Astonishing and at the same time terrifying how similar the strangers are to us. A theory says that life always evolves similarly. Maybe there is something about it, maybe it is just coincidence.",
        out_to ShipHangar,
        before [;
            Exit:
              <<Go FAKE_OUT_OBJ>>;
        ],
        cheap_scenery
            'pilot' 'seat' "You'd love to have one of these on the Polaris-7."
            'unusual' 'symbols' "Cuneiform again. How can this be?"
            'vivid' 'red' "It's a vivid, non-disturbing red. There's nothing else to say about it."
            '1' 'instruments' "Close to what you'd see on a Terran interceptor. Not that you want to, but you think you could actually fly this thing if it came down to it.",
   has  light scored;

Object ->  starfighterconsole "console"
  with  name 'console',
    initial "A small console flickers in vivid red.",
    description "The console allows to control various functions of the starfighter.",
    before [;
        Open, SwitchOn, Touch:
          if (energycell in ShipHangar && energycell.shielded == true) {
            energycell.shielded = false;
            score = score + 3;
            "You touch a symbol that looks like a battery to you, hoping it won't fire a rocket. A humming sound is heard from the outside.";
          }
          "You won't touch it unless necessary. And currently you don't see a reason why you should do that.";
    ],
  has static;

Room  Decontamination "Decontamination Room"
  with  description
            "Compared to the vast areas you've already seen, this room is relatively small. You feel you're heading towards something of great importance. From here you may go port and a path starboard leads you deeper into the mysteries of the stranded alien vessel. You also percieve an intense glow coming from fore.",
        n_to StarGallery,
        e_to [; ! this shows you how to opt a direction when certain conditions are met
          if (vaccine.eaten == false) "You walk a few steps, then a warning sound is heard and you're not able to move any further. It seems an invisible field is preventing you from going starboard.";
          if (Elevator hasnt visited) print "You are able to go starboard now. It's likely the security technology of the decontamination chamber was able to detect you're immune and no carrier of the virus.^";
          if (bluebutton.glowing == true) {
            bluebutton.glowing = false;
            redbutton.glowing = true;
            print "The elevator was still on the upper deck but arrived here pretty instantly.^";
          }
          return Elevator;
        ],
        w_to OppressivePlace,
        cheap_scenery
            'decontamination' 'room' MESS_SCENERY
            '1' 'path' MESS_LANDMARK
            'intense' 'glow' SCN_GO_STARGALLERY,
        talk_status 0,
   has  light scored;

[SCN_GO_STARGALLERY;
  print "You are fascinated by the intense glow and decide to go fore.^";
  <<Go FAKE_N_OBJ>>;
];

Room  StarGallery "Star Gallery"
  with  description
            "The sight takes your breath away. You're in the midst of a three-dimensional projection, a gigantic holographic simulation of our galaxy, the Milky Way. The constellation of the stars however is unfamiliar and likely shown from a different angle. An obvious exit lies aft and you notice another area port.",
        s_to Decontamination,
        w_to EnergyStream,
        cheap_scenery
            'star' 'gallery' MESS_SCENERY
            'another' 'area' MESS_LANDMARK
            'obvious' 'exit' MESS_LANDMARK
            'dark' 'corner' SCN_EX_DARKCORNER
            'constellation' 'stars' "Yes, there definitely is something wrong about the constellation of stars.",
        talk_status 0,
   has  light scored;

[SCN_EX_DARKCORNER;
  <<Examine datahub>>;
];

Object -> milkyway
  with description "This is the most detailed simulation of the Milky Way you've ever seen. You feel like drowning in a million lights.",
    parse_name [ n; ! we have lots of references to the Milky Way here, so we use parse_name
		  n=0;
		  while (NextWord()==
      'three-dimensional' or 'projection' or 'gigantic' or 'holographic' or 'simulation' or 'galaxy' or 'milky' or 'way' or 'sight' or 'lights' or 'million') {n++;}
		  return n;
    ],
    before [;
        Examine:
            rfalse; ! for this object we only want EXAMINE to work...
        default:
            print_ret (string)MESS_SCENERY; ! ...the rest triggers a standard message
    ],
  has scenery;

Object ->  datahub "data hub"
  with  name 'data' 'hub' 'device' 'plate',
    initial "In a dark corner you notice a device that you believe could be a data hub.",
    description [;
      print "The hub, which doesn't seem to be related to the star gallery, is cube-shaped and you suspect you need to put something on it, as at the top there is some sort of plate. It's ";
      if (self.powered == false) print_ret "somehow missing power, which is something you probably need to take care of.";
      else print_ret "pulsating softly which tells you it's ready to be used, for whatever the use is.";
    ],
    before [;
        if (self.powered == false) "It seems the data hub is missing power. As long as that's the case, you decide to put no object on it. It won't help you progress anyway.";
    ],
    after [; ! supporters trigger Receive: & LetGo: after you place something onto them or take it away
      Receive:
        give self moved; ! giving the moved property is a trick to override the 'initial' string
        scope_modified = true;
        if (silverdisc in self) {
          self.starchart_updated = true;
          hologram.shows_unknown = false; ! triggers the navigator hologram in the soul collector
          navigator.died = true; ! farewell brave navigator, your time has come 
          "You place the silver disc containing the lost references to the alien homeworld on the data hub. The whole star gallery flashes for a second, signalizing that the star charts have been updated.";
        }
        "You put ", (the) noun, " on the data hub. Nothing else happens, so you believe this is the wrong item.";
      LetGo:
        give self ~moved;
        scope_modified = true;
        if (~~(silverdisc in self)) self.starchart_updated = false;
        "You take ", (the) noun, " from the data hub.";
    ],
    powered false,
    starchart_updated false,
  has supporter static;

Room  EnergyStream "Energy Stream"
  with  description
            "The majority of the room consists of a basin in which impressive energy rays flow, gentle electrified waves, almost surreal in motion. Here apparently is the power source of the star gallery. You may leave starboard.",
        e_to StarGallery,
        cheap_scenery
            '1' 'room' MESS_SCENERY
            'mechanical' 'claws' "The claws look massive. Once they hold something, you doubt there's a chance to get it back."
            '1' 'basin' "It is about the size of a swimming pool. However, swimming is probably not recommended here.",
   has  light scored;

Object -> raysenergy
  with description "In awe you gaze at the wonders at your feet.",
    parse_name [ n; ! we have lots of references to the Milky Way here, so we use parse_name
		  n=0;
		  while (NextWord()==
      'rays' or 'ray' or 'energy' or 'gentle' or 'electrified' or 'waves' or 'motion') {n++;}
		  return n;
    ],
    before [;
        Examine:
            rfalse; ! for this object we only want EXAMINE to work...
        default:
            print_ret (string)MESS_SCENERY; ! ...the rest triggers a standard message
    ],
  has pluralname scenery;

Object ->  mounting "mounting"
  with  name 'mounting' 'small' 'pedestal',
    initial "On a small pedestal behind the basin there's a mounting.",
    description "The mounting is made for placing a certain object on it, which you guess is related to energy, since it's the purpose of this room.",
    before [;
      Receive:
        if (noun ~= energycell) "You try placing ", (the) noun, " on the mounting but as you get closer an invisible force keeps you from doing it. It's probably just the wrong object."; 
    ],
    after [;
      Receive:
        give energycell static;
        score = score + 3;
        datahub.powered = true;
        mounting.description = "The mounting currently holds an energy cell.";
        "As soon you put the energy cell on the mounting it starts to glow and small mechanical claws fix it in place.";
    ],
  has supporter static;

Room  Elevator "Elevator"
  with  description [;
            print "The elevator is completely transparent. A glance down immediately creates a shingle feeling. Somehow you're located behind the decks here. You estimate that there are several hundred meters between you and the ship's hull. The exit lies port.^^";
            print "A scanner is embedded into the wall and there's a red and a blue button next to it.";
            if (redbutton.glowing == true) " The red button is glowing.";
            if (bluebutton.glowing == true) " The blue button is glowing.";
            new_line;
        ],
        cheap_scenery
            'decks' 'elevator' MESS_SCENERY
            '1' 'hull' "That's really far away. Let's hope the elevator does still work.",
        w_to [;
          if (scanner.authorized == false) return Decontamination;
          if (redbutton.glowing == true) return Decontamination;
          if (bluebutton.glowing == true) return SpecimenExhibition;
        ],
   has  light scored;

Object -> redbutton "red button"
  with  name 'red' 'button',
    description [;
      print "You stare at an unspectacular red button.";
      if (self.glowing == true) print " Currently it's glowing.";
      new_line;
      ],
    before [;
      Push, SwitchOn:
        if (self.glowing == false) "Nothing happens.";
        self.glowing = false;
        bluebutton.glowing = true;
        "You push the red button and the elevator moves rapidly fast to the upper deck. The whole transition only took a few seconds.";
    ],
    glowing false,
  has scenery;

Object -> bluebutton "blue button"
  with  name 'blue' 'button',
    description [;
      print "The blue button looks like any generic button you'd find on Terra.";
      if (self.glowing == true) print " It's glowing at the moment.";
      new_line;
      ],
    before [;
      Push, SwitchOn:
        if (self.glowing == false) "Nothing happens.";
        self.glowing = false;
        redbutton.glowing = true;
        "As you push the blue button, the elevator rushes down to the lower deck, reaching it in the blink of an eye.";
    ],
    glowing false,
  has scenery;

Object ->  scanner "scanner"
  with  name 'scanner',
    initial "A scanner is embedded in the wall.",
    description "It's about 30 x 40 cm in size and likely meant for authentification purposes.",
    before [;
        Touch:
          "You put your hand on it but you neither feel anyhting unexpected nor does something happen.";
        Push, Pull:
          "It's not moving.";
    ],
    authorized false,
  has scenery;

Room  SpecimenExhibition "Specimen Exhibition"
  with  description
            "The cuneiform writings all over the vessel already indicated a connection to Terra, but what you see here takes your breath away. You're in a gallery with human exhibits, obviously Sumerians of different eras. Assuming the alien ship has left the Earth during the archaic epoch of the Sumerian empire, it must have stranded here over 6.000 years ago. Exits are port, starboard and aft.",
        e_to [;
          if (redbutton.glowing == true) {
            redbutton.glowing = false;
            bluebutton.glowing = true;
            print "The elevator was still on the lower deck but it took only a few seconds for it to arrive.^";
          }
          return Elevator;
        ],
        s_to PositronicsLab,
        w_to HomeworldExposition,
        cheap_scenery
            '1' 'specimen' MESS_SCENERY
            'ceremonial' 'dress' "It is made of wonderful fabrics and covered all over with silver and gemstones."
            '1' 'gemstones' "They must have been infinitely valuable even back then."
            '1' 'fabrics' "Amazing that it's still in such a good condition."
            '1' 'silver' "You remember that many of the objects found in the Royal Tombs of Ur are made of silver. Is Ur where the high priestess is coming from?"
            '1' 'exits' MESS_LANDMARK,
        talk_status 0,
   has  light scored;

Object -> humanexhibits,
    with description "The Sumerians here all look alive, almost like frozen in the moment. Slowly you begin to realize that it must have been the aliens who taught them cuneiform writing. This is the only logical explanation.",
    parse_name [ n;
      n=0;
      while (NextWord()==
      'human' or 'humans' or 'sumerians' or 'gallery' or 'exhibits') {n++;}
      return n;
    ],
    before [;
      Examine:
        rfalse; ! for this object we only want EXAMINE to work...
      default:
        print_ret (string)MESS_SCENERY; ! ...the rest triggers a standard message
    ],
  has pluralname scenery;

Character ->  highpriestess "high priestess"
  with  name 'high' 'priestess',
    initial "A high priestess fascinates you the most, and you feel haunted by her gaze, even if it is only your imagination. Somehow her presence is noticable.",
    description "The high priestess is a true beauty and absolutely lifelike. Her ceremonial dress in honor of the goddess Inanna is richly decorated. The worship of Inanna started around 4000 BC. Her name derives from the Sumerian phrase nin-an-ak, which means ~Lady of Heaven~.",
    before [;
      Touch:
        "She's cold. Not like she's frozen, more like how your skin feels after an extensive walk on a lonely winter's day.";
      Search:
        if (~~(sacralgolddagger in highpriestess)) "You've already taken everything from the priestess you could.";
        move sacralgolddagger to SpecimenExhibition;
        scope_modified = true;
        score = score + 3;
        "You take a closer look and notice a sacral dagger made of pure gold, which you place on the floor.";
    ],
  has female static;

Object -> -> sacralgolddagger "sacral gold dagger"
  with  name 'sacral' 'gold' 'dagger',
    initial "A sacral gold dagger lies on the floor.",
    description "The sacral gold dagger was part of the ancient Sumerian worship rituals for goddess Inanna. It's not suitable for being used as a weapon.",
    before [;
        Attack, Cut:
          "You cannot use the dagger as a weapon. The gold is much too soft to cause serious damage with it.";
    ],
  has scored;

Room  PositronicsLab "Robotics Laboratory"
  with name 'mess',
        description
            "You are standing in a laboratory for robotics and artificial intelligence. It has been devastated for unknown reasons but much of the equipment still seems functional. The technology level here is far beyond Terran standards. Fore lies the sole exit.",
        n_to SpecimenExhibition,
        cheap_scenery
            'laboratory' 'robotics' MESS_SCENERY
            'artificial' 'intelligence' MESS_SCENERY
            'technology' 'level' "This is absolutely mind-blowing and so much more advanced than what human science has been able to achieve since mankind made use of the machine from industrial age to present day."
            '1' 'equipment' "The equipment could be very useful. Your only problem is that you're not able to operate this yourself."
            'demolished' 'spot' SCN_EX_DEMOLISHEDAREA
            '1' 'body' SCN_EX_DEMOLISHEDAREA
            '1' 'exit' MESS_LANDMARK,
        talk_status 0,
   has  light scored;

[SCN_EX_DEMOLISHEDAREA;
  "Wow, that needs to repaired.";
];

Character ->  brokenassistantrobot "assistant robot"
  with  name 'broken' 'assistant' 'robot',
    initial "In the midst of all the mess stands an assistant robot, looking at you expectantly, as if it awaits your orders.",
    article "an",
    description [; ! based on properties you can craft descriptions the way you want them to be
      print "The assistant robot clearly has seen better days. ";
      if (self.broken == true) "It seems to be missing some parts to repair itself.";
      if (self.broken == false) {
        print "Nevertheless, with your help it's functional again";
        if (io.upgrade_status < 2) " and apparently it wants more objects from you.";
        if (io.upgrade_status == 2) ".";
      }
    ],
    life [;
      Talk:
        if (self.broken == true) "The robot points to a demolished spot on its body and says: ~49 20 6e 65 65 64 20 73 70 61 72 65 73 2e~";
        else {
          if (io.upgrade_status < 2) "The robot nods at you and says: ~49 20 75 70 67 72 61 64 65 20 79 6f 75 72 20 66 72 69 65 6e 64 2e 20 47 69 76 65 20 6d 65 20 70 6f 73 69 74 72 6f 6e 69 63 20 63 68 69 70 73 65 74 20 61 6e 64 20 63 6f 6e 64 75 63 74 6f 72 21~";
          if (io.upgrade_status == 2) "The robot waves at you and says: ~4d 79 20 77 6f 72 6b 20 69 73 20 64 6f 6e 65 2e 20 47 6f 6f 64 20 6c 75 63 6b 21~";
        }
      Give, Show:
        if (noun == droidspares) {
          move droidspares to brokenassistantrobot;
          scope_modified = true;
          self.broken = false;
          "The robot examines the spare parts and seems satifsfied with them. You look at it fascinated while it fixes itself. Some parts have to be adjusted, but after just a few minutes the work is done and the robot finally seems to be fully functional again.";
        }
        if (noun == sacralgolddagger or advancedtechnologyparts && self.broken == false) {
          if (noun == sacralgolddagger) {
            move sacralgolddagger to brokenassistantrobot;
            scope_modified = true;
            score = score + 3;
            print "The robot accepts the sacral dagger. The gold will be a good conductor even though melting this important piece of history is defintely not a good thing to do.^";
          }
          if (noun == advancedtechnologyparts) {
            move advancedtechnologyparts to brokenassistantrobot;
            scope_modified = true;
            score = score + 3;
            print "You give the advanced chipset parts to the assistant robot and it accepts them, confirming your assumption that the integrated chipset was of positronic nature.^";
          }
          if (sacralgolddagger in brokenassistantrobot && advancedtechnologyparts in brokenassistantrobot) {
            io.upgrade_status = 2;
            PositronicsLab.talk_status = 2;
            print "^The robot now has all parts it needs for the upgrade and stretches its hands out to you, demanding Io. You're worried, so you hesitate. This is going to be a fundamental intervention and if it fails, the consequences would be severe, both for you and your little friend.^^~It's okay, Olivia. The robot wants to help us.~^^You decide to let it happen.^^It takes more than an hour for the assistant robot to implement the positronic chipset, which will function as a new central processing unit for Io. In Asimov's theories, a positronic brain provides machines with a form of conconsciousness recognizable to humans. If this is true, Io just got the most important upgrade of his lifetime.^^As the assistant robot finally returns your companion to you, you feel relieved. But your adventure is not over yet. And you fear you might be the only living being here among the dead.^";
          }
          rtrue;
        }
        print_ret "The robot refuses ", (the)noun, ".";
      Attack, ThrowAt:
        "The robot clearly is not hostile. You won't attack an artificial intelligence for no reason.";
    ],
    before [; ! the life routine does not respond to TOUCH so we add a before routine for this
        Touch:
          "You touch the robot and absolutely nothing happens.";
    ],
    broken true,
  has animate neuter static;

Room  HomeworldExposition "Homeworld Exposition"
  with  description
            "The hall seems to be dedicated to the homeworld of the alien voyagers. Interactive holograms depict flora and fauna, technological achievements and even colonies on the moons surrounding their homeworld. You may go fore or starboard from here.",
        n_to CreepyPassage,
        e_to SpecimenExhibition, 
        cheap_scenery
            'hall' 'exposition' MESS_SCENERY
            'alien' 'voyagers' MESS_SCENERY
            'interactive' 'holograms' "These holograms are overwhelming. You believe they can be controlled somehow but now is not the right time to play with that."
            'flora' 'fauna' "Both flora and fauna seem strange to you, yet somehow familiar, which makes sense. The aliens bear a certain resemblance to humans, suggesting that their planet must be Earth-like."
            'technological' 'achievements' "You gaze at thinking machines, gigantic spaceships and so many wonders far beyond human imagination."
            'colonies' 'moons' "You see wonderful cities under great glass domes and spaceports amid the inhospitable, crater-riddled landscape of the moons."
            'planet' 'homeworld' "It seems indeed Earth-like. Their sun seems to be a red dwarf though, which means the planet must be closer to it than Earth is to Sol.",
   has  light scored;

Object -> expositiondivestop, ! purpose of the object: prevent the player from diving deeper
  with description "You should not digress. There is still a mission to accomplish.",
    parse_name [ n;
      n=0;
      while (NextWord()==
      'thinking' or 'machines' or 'gigantic' or 'spaceships' or 'wonders' or 'wonderful' or 'cities'
      or 'great' or 'glass' or 'domes' or 'spaceports' or 'crater-riddled' or 'landscape' or 'sun' 
      or 'red' or 'dwarf') {n++;}
      return n;
    ],
    before [;
      Examine:
        rfalse; ! for this object we only want EXAMINE to work...
      default:
        print_ret (string)MESS_SCENERY; ! ...the rest triggers a standard message
    ],
  has scenery;

Room  CreepyPassage "Creepy Passage"
  with  description
            "Something is wrong here and you feel it. This isn't just a passage. Everything on this ship has its puropose. Such places are seen quite often in the medieval castles on Terra. Corner the enemy and then kill them efficiently.",
        s_to HomeworldExposition,
        w_to [;
          if (plasmabarrier hasnt on) return SoulCollector;
          else "You can't go in that direction as long as the plasma barrier blocks your way.";
        ],
        cheap_scenery
            'creepy' 'passage' MESS_SCENERY,
   has  light scored;

Object ->  plasmabarrier "plasma barrier"
  with  name 'plasma' 'barrier' 'path',
    initial [;
      print "The path port is";
      if (self hasnt on) print " no longer";
      print_ret " blocked by a plasma barrier. You may also go aft.";
    ],
    description [;
        if (self has on) "This thing will turn you into ashes in under one second. No doubt about it. You need to find a way to disable the barrier but there are neither controls nor a terminal visible here.";
        "The barrier is fortunately deactivated and safe for you to pass through.";
    ],
    before [;
        Touch, Push, Pull, Turn:
          if (self has on) "Have you ever talked to a psychologist about your death wish?";
          "The barrier is deactivated so you can't even try that.";
    ],
  has on static;

Object -> maintenanceshaft "maintenance shaft",
  with name 'maintenance' 'shaft' 'entry' 'entrance',
    initial [;
        print "There's the entry to a maintenance shaft in the wall.";
        if (grille.screwed == true) " However, the access is covered by a grille.";
        new_line; rtrue;
    ],
    description "You are wondering where it may lead. You won't be able to figure it out yourself though, because you would never fit in there. You estimate it to be about 40 to 50 centimeters in height and width.",
    before [;
        Enter:
          print "The maintenance shaft is too narrow for you";
          if (grille.screwed == true) print " and it's covered by a grille anyway";
          print ".";
          new_line; rtrue;
        Attack, Push, Pull, Turn: ! sometimes you just need to help the player
          if (grille.screwed == true) "You probaly want to do something with the grille instead?";
          else rfalse;
    ],
  has static;

Object -> grille "grille", 
  with name 'grille' 'screws',
    description [;
        if (self.screwed == true) "The grille is screwed to the wall and covers the maintenance shaft.";
        if (self.screwed == false && self.shot == true) "You disintegrated a large part of it but what's left lies on the floor now.";
        "It lies on the floor now.";
    ],
    before [;
      if (action == ##Examine) rfalse;
      if (self.screwed == false) "There's no point in doing anything with the grille now that it doesn't cover the shaft anymore.";
        Turn:
          if (verb_word == 'turn') "You cannot seem to turn the grille.";
          "You probably want to be more specific.^^[unscrew grille with object]";
        Attack:
          if (second == vibroknife) "The knife is not strong enough to cut through the grille.";
          if (second == laserrifle) {
            if (laserrifle.weapon_mode == 0) "The paralyze mode of the rifle won't help here.";
            self.screwed = false;
            self.shot = true;
            score = score + 8;
            "(alternate solution, bonus points)^You shoot at the grille using the disintegrate mode. It only takes a few seconds for the laser to cut through the metal and make it fall to the ground. The shaft is now accessible.";
          }
        Push, Pull, Take:
          "You try to move the grille but you fail.";
    ],
    screwed true,
    shot false,
  has scenery;

Room  SoulCollector "Soul Collector"
  with  description
            "Amber glow floods the archaic hall, which reminds you much of a crypt. Years ago we found a particularly dark blue stone in the Kuiper Belt. The walls here seem to be made of a similar material. In the center, under almost gothic arches, is a metal platform where life-size crew members are projected. Exits lead starboard and aft.",
        s_to Lounge,
        e_to CreepyPassage,
        cheap_scenery
            'soul' 'collector' MESS_SCENERY
            '1' 'exits' MESS_SCENERY
            'amber' 'glow' "You can't see any source of light. The glow is very intense."
            'archaic' 'hall' "This place seems to be sacred. In awe you gaze at its beauty."
            '1' 'crypt' "The whole ship seems to have turned into a crypt. You feel sorry for all those who died here because of the virus."
            'gothic' 'arches' "It reminds you of the architecture you saw in the Basilica of Saint-Denis many years ago." 
            'metal' 'platform' "The platform itself is rather unspectacular.",
        before [;
          Insert, PutOn:
            if (second == metallicniche) {
              if (noun == eggshapedcrystal) rfalse;
              "That's not the right object for the niche. It doesn't fit.";
            }
        ],
   has  light scored;

Object -> darkbluestone,
  with description "What a deep, beautiful color.",
    parse_name [ n;
      n=0;
      while (NextWord()==
      'dark' or 'blue' or 'stone' or 'material') {n++;}
      return n;
    ],
    before [;
      Examine:
        rfalse; ! for this object we only want EXAMINE to work...
      default:
        print_ret (string)MESS_SCENERY; ! ...the rest triggers a standard message
    ],
  has scenery;

Object ->  hologram "hologram"
  with initial [;
      if (self.shows_unknown == true) "The hologram currently shows an unknown alien master.";
      "Surprised you recognize that the hologram shows the navigator now.";
    ],
    parse_name [ n;
      n=0;
      while (NextWord()==
      'alien' or 'master' or 'hologram' or 'crew' or 'member' or 'members' or 'unknown' or 'life-size') {n++;}
      return n;
    ],
    description [;
        if (self.shows_unknown == true) "It seems like the alien master is looking at you. You're not sure if this is a place of remembrance or something else. What if the ship has the ability to collect the consciousness of the beings that die here? You definitely feel observed.";
        "The navigator points towards the ship's bridge. It seems his work is done here and now it's up to you to keep your promise.";
    ],
    before [;
        Talk:
          if (self.shows_unknown == false) <<Examine hologram>>;
          "You talk to the hologram but the alien master only stares at you.";
        Touch, Push, Pull: 
          "You try to touch the hologram but your hands reach into nothingness.";
    ],
    shows_unknown true,
  has static;

Object ->  metallicniche "metallic niche"
  with  name 'metallic' 'niche',
    initial "You notice a metallic niche, obviously meant to hold an oval object.",
    description "The corresponding object must be inserted here.",
  has static;

Object -> -> sequencenote "sequence note",
  with name 'sequence' 'note',
    description "The note reads: 7782.",
  has scored;

Room  Lounge "Lounge"
  with  description
            "The area is lavishly equipped. Beautiful upholstered seats with strange patterns create an infinite cozy impression, which is enhanced by the subdued light. The whole western wall is a window and allows a longing look into the starlit depths of the cosmos. You may leave fore and port.",
        n_to SoulCollector,
        w_to OfficersQuarters,
        cheap_scenery
            'area' 'lounge' MESS_SCENERY
            'upholstered' 'seats' "You'd love to take a seat now but this is neither the right time nor the right place."
            'strange' 'patterns' "The patterns look oriental to you, even though you're sure they're not."
            'subdued' 'light' "The light in interaction with the bodies here generates an ominous atmosphere."
            'western' 'wall' SCN_EX_WINDOW
            'cosmos' 'stars' SCN_EX_WINDOW
            '1' 'window' SCN_EX_WINDOW
            '1' 'asteroids' "The asteroids calmly pass through the cosmic void."
            '1' 'bar' "Let's hold on to the thought of having a drink in case you ever make it through this alive."
            '1' 'table' "There is nothing on the table.",
   has  light scored;

[SCN_EX_WINDOW;
  "The universe is so beautiful and yet so inhospitable and cold. In the distance you can see some asteroids.";
];

Object ->  deadaliengroup "dead alien group"
  with  initial "There is a dead alien group at a table near the bar. The way they sit suggests a collective suicide.",
    parse_name [ n;
      n=0;
      while (NextWord()==
      'dead' or 'group' or 'alien' or 'bodies' or 'aliens') {n++;}
      return n;
    ],
    description [;
        print "The group must be dead for a long time. The bodies are mummified. How hopeless must the situation have been to prefer suicide to an agonizing death from the virus? You feel very sorry for these beings.";
        if (self.examined == false) print "^^An old Terran song comes to your mind:^Under the fog there are shadows moving^Don't be afraid, hold my hand^Into the dark there are eyelids closing^Buried alive in the shifting sands^Sleep my child."; ! reference: Opeth - Death whispered a Lullaby
        new_line;
        self.examined = true;
    ],
    before [;
        Search:
          if (self.searched == true) print_ret (string)MESS_NONEEDAGAIN;
          move eggshapedcrystal to Lounge;
          self.searched = true;
          scope_modified = true;
          score = score + 3;
          "You search the group and one of the deceased is holding an egg-shaped crystal. You take it and place it on the floor.";
    ],
    examined false,
    searched false,
  has pluralname static;

Object -> ->  eggshapedcrystal "egg-shaped crystal"
  with  name 'egg-shaped' 'crystal',
    initial "An egg-shaped crystal lies on the floor.",
    article "an",
    description "You suspect this is rather a technology than a crystal but you neither have an idea what's the purpose nor what may be achieved with it.",
    before [;
        Insert, PutOn:
        if (second == metallicniche) {
          move sequencenote to player;
          move self to limbo;
          update_moved = true;
          scope_modified = true;
          "You insert the crystal into the metallic niche and it fits perfectly. After a few seconds, the crystal dematerializes. As you look around, you notice that something has changed with the hologram and that it shows a different individual now. It is the dead master who carried the crystal. And he looks much alive. You have no other explanation than that the crystal must be a vessel for transporting the consciousness. Did he transfer it into the crystal when he died? Or did it happen automatically? Is this location a place where the souls of the deceased are gathered? An inconceivable assumption.^^The dead master shows you a sequence with his fingers. It seems to be a numerical code. You write down the sequence and put it in your pocket. As you look up, the dead master from the lounge is vanished and the hologram shows an unknown master again.";
        }
        "That's not the right object for the crystal.";
    ],
  has scored;

Room  OfficersQuarters "Officers Quarters"
  with  description
            "There are a handful of lockers and various rest areas here. Pictures on the wall show impressions of space caravans on cosmic journeys as well as strange landscapes on even more strange planets. On the northern wall there's a tactical map of a star quadrant. There are exits fore and starboard.",
        n_to [;
          if (commandbadge has worn) return StarshipBridge;
          "An invisible force field prevents you from going that direction. You are probably not authorized.";
        ],
        e_to Lounge,
        cheap_scenery
            'officers' 'quarters' MESS_SCENERY
            '1' 'exits' MESS_SCENERY
            '1' 'lockers' "They all seem to be closed and there is no obvious way of opening them."
            'rest' 'areas' "Things have evolved to a level where you're glad you're not seeing any new bodies here."
            'northern' 'wall' SCN_EX_TACTICALMAP
            'tactical' 'map' SCN_EX_TACTICALMAP
            'star' 'quadrant' SCN_EX_TACTICALMAP
            '1' 'constellations' SCN_EX_TACTICALMAP
            'green' 'monitor' "Just a regular monitor that is easy on the eyes. There's nothing special about it.",
   has  light scored;

[SCN_EX_TACTICALMAP;
  "You take a look at the tactical map but these constellations do not correspond to any of your known records.";
];

Object -> spacecaravans,
  with description "These impressions are truly breathtaking. It looks like the alien builders visited many worlds and met many species. It almost seems as if they were providing development aid. So who are they and where did they come from? Were they supposed to help us but had to leave Terra because the microbiological dangers on our planet harmed them? Maybe viruses are not as common as we think.",
    parse_name [ n;
      n=0;
      while (NextWord()==
      'space' or 'caravans' or 'cosmic' or 'journeys' or 'strange' or 'landscapes' or 'planets' or
      'impressions' or 'pictures') {n++;}
      return n;
    ],
    before [;
      Examine:
        rfalse; ! for this object we only want EXAMINE to work...
      default:
        print_ret (string)MESS_SCENERY; ! ...the rest triggers a standard message
    ],
  has pluralname scenery;

Object ->  quarterterminal "authentication terminal" ! different name?
  with  name 'authentication' 'terminal',
    initial "An authentication terminal is awaiting input.",
    description "The authentication terminal is connected to a green monitor. This brings back nostalgic memories. It's obviously not meant for complex tasks. You authentify and then something happens.",
    before [;
      Open, SwitchOn, Touch:
        "It's asking for a code.";
      SwitchOff:
        print_ret (string)MESS_NOWAYOFF;
    ],
  has static;

Object -> -> commandbadge "command badge"
  with  name 'golden' 'command' 'badge',
    initial "You notice a golden command bage on the floor.",
    description "A command badge most likely from one of the deceased alien officers. It's golden and has the ship's silhouette engraved. This object is meant to be worn.",
    before [;
        Disrobe:
        "You realize that the badge is important, so you keep it on.";
        Drop, Insert, PutOn:
        "You're not going to leave the badge somewhere. You need this to access the bridge of the alien ship.";
    ],
  has transparent clothing scored;

! since the command badge is transparent, the game will adapt the silhouette as "part of the badge"
Object -> -> -> silhouette "silhouettte",
  with name 'silhouette', 
    description "It's so beautiful. You wonder what's the ship's name.";

Room  StarshipBridge "Starship Bridge"
  with  description
            "You are underneath a huge glass dome which extends outwards to the console of the ship's positronic mainframe. The sight is truly breathtaking. It's a feeling of becoming one with the universe, of being absorbed by infinity. The passage aft allows returning to the quarters.",
        n_to hatch,
        s_to OfficersQuarters,
        cheap_scenery
            '1' 'bridge' MESS_SCENERY
            'cosmic' 'aeon' "The cosmic aeon can never be grasped by the human eye."
            'way' 'path' MESS_SCENERY
            '1' 'quarters' SCN_EX_QUARTERS,
   has  light scored;

[SCN_EX_QUARTERS;
  print (string)MESS_GO_LANDMARK, "return to the quarters by going aft.^";
  <<Go FAKE_S_OBJ>>;  
];

Object -> hugeglassdome,
  with description "You look above and dive into the everglowing void, where innumerable stars in a million colors illuminate the surrounding nothingness. Never were you closer to the endless ocean of the cosmic aeon, which gifted us the fragile shell we call existence, only to consume it again at the end of time, when all cycles have come to end and all that was will fade.",
    parse_name [ n;
      n=0;
      while (NextWord()==
      'huge' or 'glass' or 'dome' or 'sight' or 'innumerable' or 'stars' or 'million' or 'colors' or
      'surrounding' or 'nothingness' or 'endless' or 'ocean') {n++;}
      return n;
    ],
    before [;
      Examine:
        rfalse; ! for this object we only want EXAMINE to work...
      default:
        print_ret (string)MESS_SCENERY; ! ...the rest triggers a standard message
    ],
  has scenery;

Object ->  positronicmainframe "positronic mainframe"
  with  description "positronic mainframe",
    parse_name [ n;
      n=0;
       while (NextWord()== 'positronic' or 'mainframe' or 'console' or 'Ysh') {n++;}
      return n;
    ],
    before [;
      Examine: 
          rfalse;
      default:
          "You should talk to Io instead.";
    ],
  has scenery;

Object -> hatch "hatch"
  with  name 'hatch',
    description [;
      if (self hasnt open) "You wonder what you will find behind this hatch. Your fate? Or maybe death? Whatever it may be, you're going to know soon.";
      "Of all the obstacles on this ship, this one was the easiest to overcome.";
    ],
    when_closed "A hatch fore blocks your way to a presumed secure area.",
    when_open "The hatch is now open and no longer blocking the path fore.",
    door_to SanctumoftheKeeper,
    door_dir n_to,
    before [;
      Open, Unlock:
        if (self hasnt open) "This is nothing you may do with your bare hands. There are no levers nor buttons. There is no obvious way to open the Hatch.";
        "It is already open.";
      Close, Lock:
        if (self has open) "There is no obvious way to close the hatch again.";
        "It is already tighly shut.";
      Push, Pull: 
        "You try your best but the hatch won't move.";
      Touch:
        "The hatch actually feels warm. Interesting."; ! this is wonderful, totally useless information
    ],
  has static door openable;

Room  SanctumoftheKeeper "Sanctum of the Navigator"
  with name 'sanctum', ! this will trigger: You don't need to refer to "sanctum" in this game
        description
            "You are in a surprisingly small room that is bathed in a faint red light. On one of the walls, an interactive view of the alien spaceship is displayed, over which status messages run. In a transparent tube in front of you swims the navigator, surrounded by a kind of nutrient solution. The only way out is aft.",
        s_to StarshipBridge,
        cheap_scenery
            'small' 'room' MESS_SCENERY
            'alien' 'spaceship' "It's monumental, like a city travelling through the cosmos."
            'interactive' 'view' "It seems to cover every aspect of the ship. If you get that right, the thousands of years out here between the stars did not harm it."
            'nutrient' 'solution' "Is this what kept him alive for millenia?"
            'status' 'messages' "You're not able to read the messages."
            '1' 'ceiling' "It's just a ceiling. Nothing special at all.",
   has  light scored;

Object -> faintredlight,
  with description "Red light always has a very special effect on you. It invigorates you and makes you perceive things more intensely.",
    parse_name [ n;
      n=0;
      while (NextWord()==
      'faint' or 'red' or 'light') {n++;}
      return n;
    ],
    before [;
      Examine:
        rfalse; ! for this object we only want EXAMINE to work...
      default:
        print_ret (string)MESS_SCENERY; ! ...the rest triggers a standard message
    ],
  has scenery;

Object -> transparenttube "transparent tube",
  with name 'transparent' 'tube',
    description "The tube reaches from the floor to the ceiling. ",
    before [;
        Touch:
          "The tube feels warm.";
        Push, Pull:
          "No way you're going ot move this thing.";
    ],
  has scenery;

Character -> navigator "navigator"
  with  name 'navigator' 'alien' 'mortal' 'shell',
    initial [;
      if (self.died == false) "The navigator watches you, obviously fascinated.";
      "The navigator has died. All that remains is his mortal shell.";
    ],
    description [;
        if (self.died == false) "He must be very old. And it looks like he was expecting you. It almost seems as if he had longed for this moment.";
        "His lifeless shell is swimming in the nutrient solution.";
    ],
    life [;
        Talk:
          if (self.died == true) "He passed away unfortunately and that makes it impossible for you to communicate with him again. May he be one with the universe.";
          if (self.talk_status == 0) {
            move silverdisc to SanctumoftheKeeper;
            scope_modified = true;
            score = score + 3;
            self.talk_status = 1;
            "You move closer to the navigator, close enough to look him in the eyes. Tired eyes, filled with infinite sadness but also with great wisdom. ~My name is Olivia.~ you say. ~I come from Terra. A planet which you already know, I believe. Why did you capture us? Do you need help?~^^As the navigator begins to speak, you hear words foreign to you. Then his voice modulates into a language you understand. He must be using some universal translator technology. ~So there you are, my child. And see what you have become. Yes, we visited your world once and watched your first steps. But your world is different. It hosts something we never encountered before on our journeys through the galaxies: the infectious organic structures you call viruses.~^^The navigator pauses for a moment and then continues. He seems to be very weak. ~When we noticed we've became carriers of a disease very harmful to us, it was already too late. We were not allowed to return to our homeworld, as the consequences would have been devastating for our species. So we stayed here in this sector. What do you do when there is no future, no way out? Some chose suicide, but most of us just layed down in cryocapsules. The technology does not completely shut down our metabolism. It just prevents from aging. So they all died peaceful in their sleep. Anything was better than the horrible death that awaited us. We saw it. It's a terrible way to die.~^^Imbued with the deepest empathy, he looks towards you. ~Then, Ysh noticed your ship. You've made it to the void without us. And I hoped you had developed a cure for the disease, which is true. I know it was not easy for you to get here and I am sorry for that. But the ship was still in quarantine mode and you paralyzed the messenger I sent.~^^That little robot spider was in fact not very amused about what happened. ~How can we help?~ you wonder.^^~Help? There's no more help for us. The thinking part of our self has already been transitioned into the collector. We wish that our bodies perish in the sun from which they originated. There is a remedy. Therefore, there is no reason to stay here any longer. But I want you to know that we lost contact with our homeworld many cycles ago. It would be a journey into the unknown, maybe a journey with no return.~^^~I will do it.~ you say. ~I will bring you home.~^^~Then it shall be.~ The navigator seems relieved. ~Ysh granted you full control over the ship's systems but first you have to update our star charts. We have erased all references to our homeworld in case hostile forces would find the ship.~^^A disc materializes in front of you and slowly floats to the ground.";
          }
          if (self.talk_status == 1) rfalse;
    ],
    before [;
        Touch:
          "The navigator is inside the transparent tube. You cannot touch him.";
        Take:
          "There's no way of getting him out of this tube.";
    ],
    died false,
    talk_status 0, ! 0 never talked, 1 all is said
  has animate;

Object -> -> ->  silverdisc "silver disc"
  with  name 'silver' 'disc',
    initial "A silver disc lies on the floor, containing the erased star chart data.",
    description "It's a disc containing the references to the homeworld of the alien masters. You'll need to update the ship's star charts to recover the lost information.",
  has scored;

[EndingSequence;
  print "^Io confirms the target coordinates as the spacecraft starts moving slowly. You feel a slight tremor as the thrusters begin to operate. From here under the glass dome you have an impressive view of the surrounding area. While the ship continues to turn, you recognize a green planet to the left, behind which an unknown sun is rising. The million bright ambassadors of morning spread a pleasant warmth as you drift in the beauty of the moment.^^One last time you look back at the Polaris-7 and you watch her getting smaller and smaller, doomed to be another forgotten vestige drifting through the endless cosmic void.^^As the hyperspace engines launch, the stars blur into a sea of stripes. Millions of suns merge into the cosmic ocean that itself is an echo of the one moment before the great expansion. The moment when it all began. Your eyes absorb the wisdom of aeons, the light that lit the path of the elders, now leading back to where you've never been.^^Spellbound, you gaze in flight direction and let the myriads of colours pass you by. So what is waiting for us in Andromeda, 2.5 million light-years away from Sol? It has always been the uncertainty that drove us forward and ultimately led us to reach for the stars. So here we are, the apprentices of the universe...";
  deadflag = 2; ! you have won!
];

[ Initialise; ! init vars and start the game
  score = 0; ! your score is at 0 when you start the game, which kinda makes sense
  notify_mode = false; ! deactivate score notifications if set false
  lookmode = 2; ! activate verbose look mode

  thedark.description = "It is pitch black. You are likely to be eaten by a space-grue.";

  player.before = PlayerBefore; ! player.before override, see routine implementation
  player.parse_name = PlayerParseName; ! own routine that parses the player's name
  player.description = "Given the circumstances, you actually don't feel that bad. Sure, waking up from hypersleep is never a great thing and it takes a while to get your circulation going again. On the other hand, you can't complain either. As long as alien body snatchers don't consume your innards and put your skin on like a dress, there's still hope.";
  
  print "^^\
        ------------------------------^\
        You open up the covers,^\
        you lure me in,^\
        this place is death,^\
        I know you feel the same...^\
        ------------------------------^\
        ^^"; ! reference: Deftones - This Place is Death
];

#ifdef DEBUG;
  [ CheatmodeSub; ! hic sunt dracones - this is for testing stuff in debug mode
    give securitydoor open;
    io.talk_status = 2;
    move io to player;
    move spacesuit to player;
    give spacesuit worn;
    move apparatus to player;
    move obscuregem to LowerCorridor;
    obscuregem.glowing = true;
    give massivedoor open;
    io.upgrade_status = 2; ! 0 no upgrade, 1 connector, 2 positronic brain
    io.learnedCuneiform = true;
    io.learnedPositronics = true;
    strangerobotspider.reprogrammed = true;
    PlayerTo(StarshipBridge);
    vaccine.eaten = true;
    scanner.authorized = true;
    bluebutton.glowing = true;
    datahub.starchart_updated = true;
    update_moved = true;
    scope_modified = true;
    MoveFloatingObjects();
  ];
#endif;

! adding the ability of making non-animate objects referred to with "him" or "her"
[ PronounNotice p_object;
	if (p_object == 0 or player or Directions) return;
	if (p_object has pluralname) {
    themobj = p_object;
	}
  else if (p_object has male or female or neuter) {
    SetPronoun(p_object);
  }
  else if (p_object has animate) {
    SetPronoun(p_object);
	}
  else itobj = p_object;
];

[ SetPronoun p_object;
  if (p_object has female) herobj = p_object;
	else if (p_object has neuter) itobj = p_object;
	else himobj = p_object;
];

[ AboutSub;
  print_ret (string)Story, " is copyright (c) 2021 by Stefan Vogt and Puddle Software.^^You may freely distribute the game, but you have to link to <8bitgames.itch.io>, where the latest version is available and optional donations are welcome. This work may not be sold or included in any for-profit collection without written permission from the author.^^Your comments and Omega bug reports are appreciated at ", "<stefan@@64","8-bit.info>.^^For acknowledgements and credits, please type ~credits~.";
];

[ CreditsSub;
  print_ret (string)Story, " is dedicated to the thousands of people worldwide who have downloaded and played the original game. Your vibrant support is overwhelming. It is also dedicated to Ralph Niese, who unfortunately passed away so unexpectedly. Your art will live forever.^^~Every man can transform the world from one of monotony and drabness to one of excitement and adventure.~ -- Irving Wallace^^The beta crew: Tim Gilberts (the man, the myth, the legend), Anthony Stiller, Graham Axten, Boris Kretzinger, Ingo Hinterding, Catventure, Eric Nelson, Stefano Gaivota, Fredrik Ramsberg, Hugo Labrande and Captain Edgecase.^^This game was created using the Inform language by Graham Nelson and it utilizes PunyInform, a custom library by Fredrik Ramsberg and Johan Berntsson.";
];

[ UseSub;
  "The verb [use] is not something you need to refer to in the course of this game. Be more specific. Here are a few common examples:^^[access / operate terminal],^you can [talk to Io] or [ask Io],^and [put keycard in slot].";
];

[ HelpSub;
  F_HELP = 1;
  print_ret "The ", (string)Story, " package contains a PlayIF card that explains the basic gameplay and many synonyms will enhance what you read on it. There are a few extra verbs necessary but these will be introduced to you in advance. You never have to guess the verb.^^Conversations are not as complex as in Infocom titles. It is sufficient to type [talk to NPC] or [ask NPC].^^There are no cardinal directions in space, since these are bound to the poles of a planet. Instead, you navigate using the nautical terms: [fore], [aft], [port], [starboard].^^You have to operate computers in this game. You do that either by yourself [operate computer], or occassionally with Io's help [ask Io] and sometimes, you have to type a code to proceed [type 1234 on/into console].^^Use the [save] command to store your progress and [restore] to load it again.";
];

[ XyzzySub;
  "A far-away robot voice screams ~idiot~!";
];

[ LookUnderSub;
  "You don't have to look under any objects in this game. The only two verbs you need in this context are [examine] and [search].";
];

#ifV3;
[ UndoSub;
  "This version of the game does not support the UNDO command.";
];
#endif;

[ UnlockWithoutKeySub;
  if (noun has lockable) print_ret "Try being more specific. You probably want to unlock ", (the) noun, " with a certain object?";
  "You cannot unlock this object.";
];

[ TypeSub;
  if (second == mainconsole) { ! the main console
    if (noun == 6502 && networkhub has locked) { ! any MOS references are completely unintended of course
      give networkhub ~locked; ! unlock the hub with the right code
      "You successfully unlocked the network hub.";
    }
    if (noun == 6502 && networkhub hasnt locked) print_ret (string)MESS_ONEMORETIME; ! no need to do it again
    else "That sequence didn't have any effect.";
  }
  if (second == victorterminal) {
    if (noun == 4510) "It takes a second for the terminal to compute your input. The reply is somewhat cryptic and doesn't make sense to you: 34M56e362G22a65";
    else "The code you've entered has not been accepted.";
  }
  if (second == quarterterminal) {
    if (~~(noun == 7782)) "That was the wrong code. Nothing happens.";
    if (~~(commandbadge in quarterterminal)) "You enter the correct code again but this time nothing happens.";
    move commandbadge to OfficersQuarters;
    scope_modified = true;
    "You enter the sequence and a slot underneath the terminal opens and reveals a command badge. You take the badge and put it on the floor. The slot closes again.";
  }
  if (second == digitallibrary or smallterminal or freightterminal or computer or starfighterconsole) { "Typing string or numeral sequences won't get you any further here."; } ! these are objects on which you can type but we rule them out
  else { ! this is triggered for any object not defined here
    "That's not an object on which you can type something.";
  }
];

[ ResearchSub;
  if (~~(location == Privatearea)) "You need the digital library of the Polaris-7 to research something.";
  if (~~(io in player)) "You need Io to research topics. The feature is about adding knowledge to his libraries that helps you progress in the course of the game.";
  if (noun == 'positronics' && digitallibrary.topic_positronics == true) {
    io.learnedPositronics = true;
    digitallibrary.topic_positronics = false;
    "The knowledge about positronics has now been added to Io's libraries. Mankind has known the concept behind this technology in theory since Isaac Asimov introduced it in one of his books. There were first efforts by a scientifc collective on Luna some years ago. Fact is until now humanity was not able to create a working positronic system.";
  }
  if (noun == 'cuneiform' && digitallibrary.topic_cuneiform == true) {
    io.learnedCuneiform = true;
    digitallibrary.topic_cuneiform = false;
    "Io can now read and process cuneiform writing. The dialect found on the alien ship is way more advanced than anything we know from our Terran records, but his basic logic should be able to adapt the existing knowledge so that understanding this sophisticated form shouldn't be a challenge.";
  }
  "You can add knowledge to Io's libraries with [research topic]. To check out which topics are available for research, simply [operate digital library].";
];

[ TypeErrSub;
  print "You'll need to be more specific. The type command wants you to provide a number or a string and an object to type it on.^^[type 1234 or ABCD on/into object]^";
  noun = false;
];

Constant SOMEWHERE_ELSE_NOW "For a second everything around you becomes insubstantial. As the sight clears, you notice that you're somewhere else now.^";

Constant SPHEREERROR "Nothing happens. Maybe it doesn't work when you're that close to the ";

[ TurnLeftSub;
  if (noun == knob) { ! we find the location to transport to based on the gem's parent
    if (~~(apparatus in player)) {
      move apparatus to player;
      update_moved = true;
      scope_modified = true;
      print "(taking the apparatus first)^";
    } ! you could also use 'superparent' to return the room the object is in, even if a container
    if (parent(obscuregem) == real_location || obscuregem in player) print_ret (string)SPHEREERROR, "obscure gem.";
    print (string)SOMEWHERE_ELSE_NOW;
    PlayerTo(parent(obscuregem));
    MoveFloatingObjects();
    rtrue;
  }
  <<Turn noun>>; ! for all other objects, TURN NOUN LEFT will invoke a regular TURN NOUN 
];

[ TurnRightSub; 
  if (noun == knob) { ! turning right will transport the player straight to the sphere
    if (~~(apparatus in player)) {
      move apparatus to player;
      update_moved = true;
      scope_modified = true;
      print "(taking the apparatus first)^";
    }
    if (location == SphereRoom) print_ret (string)SPHEREERROR, "sphere.";
    else {
      print (string)SOMEWHERE_ELSE_NOW;
      PlayerTo(SphereRoom);
      MoveFloatingObjects();
      rtrue;
    }
  }
  <<Turn noun>>; ! for all other objects, TURN NOUN RIGHT will invoke a regular TURN NOUN 
];

[ TurnAroundSub;
  if (location == AColdDarkPlace) {
    print_ret (string)MESS_TURN_SELF_AT_TUBE;
  }
  print_ret (string)MESS_TURN_SELF_ELSEWHERE;
];

[ TalkSub;
  if (noun == player) "Nothing you hear surprises you.";
  if (~~(noun ofclass Character)) "Generally, it's best to talk to living things.";
  if (noun ofclass Character && noun hasnt animate) "You once saw a movie with someone who was able to talk to the dead. You don't expect a reply in this particular case so you let it be.";
  if (RunLife(noun,##Talk) ~= 0) rfalse;
  print_ret "At the moment, you can't think of anything to say to ", (the) noun, ".";
];

[ InteractSub;
  if (noun == nothing) noun = second;
  print_ret "Please use [talk to ", (the) noun, "] for this type of interaction.";
];

[ InteractErrorSub;
  print_ret "That doesn't seem to make any sense. Please use [talk to someone/something] for this type of interaction.";
];

[ AdmireSub;
  "Go ahead and admire things while you die here in this icy grave.";
];

[ OpenEyesSub;
  if (location == AColdDarkPlace) {
    print "Blurred shapes slowly morph into a clear picture. It takes a moment for you to find your way back to reality. Has the Polaris-7 reached its destination? Still a bit shaky on your legs you climb out of the hypersleep tube.^";
    PlayerTo(HibernationChamber);
    MoveFloatingObjects(); ! not mandatory but may fix issues after PlayterTo
    rtrue;
  }
  "Your eyes are already open. How could you see otherwise?";
];

[ CloseEyesSub;
  if (location == AColdDarkPlace) "Your eyes are closed already. It seems that you are still a bit confused.";
  "You just woke up after being so many years in hypersleep and now you want to close your eyes again? Wow.";
];

[ PlayerBefore;
    Turn:
      if (location == AColdDarkPlace) {
        print_ret (string)MESS_TURN_SELF_AT_TUBE;
      }
      print_ret (string)MESS_TURN_SELF_ELSEWHERE;
    Attack:
      "As hopeless as the situation may be, this is never a way out.";
    default:
      rfalse;
];

[ PlayerParseName n;
		n=0;
		while (NextWord()=='me' or 'myself' or 'self' or 'yourself' or 'Olivia') {n++;}
		return n;
];

[ InvSub;
	if(child(player) == 0) { PrintMsg(MSG_INVENTORY_EMPTY); rtrue; }
    PrintMsg(MSG_INVENTORY_DEFAULT);
	AfterRoutines();

  ! we override the InvSub so we can show a nice fancy upgrade status for Io.
  if (io in player) {
    new_line;
    if (io.upgrade_status == 0) print "Io is [version 1]: no upgrades.^";
    if (io.upgrade_status == 1) print "Io is [version 2]: connector upgrade.^";
    if (io.upgrade_status == 2) print "Io is [version 3]: positronic brain.^";
  }
];

[ SmellSub;
  ! in space, no one hears you scream... err... smell
  if(spacesuit has worn) "In this spacesuit, you smell nothing but yourself.";
	if(ObjectIsUntouchable(noun)) return;
	PrintMsg(MSG_SMELL_DEFAULT);
];

[ FillErrorSub;
  "The fill command wants you to be more specific.^^[fill object with liquid]";
];

[ DisassembleSub;
  if (second == false) "The disassemble command wants you to be more specific.^^[disassemble object with toolbox]";
  if (second ~= toolbox) print_ret "You may only disassemble objects with your toolbox.";
  if (noun == aggressivedroid) {
    if (noun.destroyed == false) "You can't disassemble the droid while it's moving still.";
    score = score + 3;
    move aggressivedroid to Limbo;
    move droidspares to BaseStation;
    scope_modified = true;
    "You disassemble the droid until nothing remains but droid spare parts.";
  };
  if (noun == energycell) {
    if (energycell.screwed == false) rfalse;
    if (second == toolbox) {
      if (energycell.shielded == true) "You can't unscrew the energy cell as long as it is protected by a shield.";
      move energycell to player;
      update_moved = true;
      scope_modified = true;
      energycell.screwed = false;
      score = score + 3;
      "You unscrew the energy cell and put it in your pocket.";
    }
  }
  if (noun == grille) {
    grille.screwed = false;
    score = score + 3;
    "You unscrew the grille and put it on the floor. The shaft is now accessible.";
  }
  "Disassembling that object won't help you progress.";
];

#ifdef DEBUG;
Verb 'aenima' * -> Cheatmode;
#endif;

Verb 'about' * -> About;
Verb 'credits' * -> Credits;
Verb 'help' * -> Help;

Verb 'use' * -> Use
           * noun -> Use
           * noun 'with'/'on'/'in'/'at' noun -> Use;

Verb 'xyzzy' * -> Xyzzy;

#ifV3;
Verb 'undo' * -> Undo;
#endif;

Verb 'type'  * -> TypeErr
             * special -> TypeErr
             * special 'on'/'into'/'in' -> TypeErr
             * special 'on'/'into'/'in' noun -> Type;

Verb 'admire' * noun -> Admire;

Verb 'research' * -> Research  
                * special -> Research 
                * special 'with'/'on' noun -> Research;

Extend 'turn' * noun 'left' -> TurnLeft
              * noun 'right' -> TurnRight;
Extend 'turn' * 'around' -> TurnAround;
Extend 'turn' * 'over' noun -> Turn;
Extend 'turn' * noun 'with' noun -> Disassemble;

Verb 'disassemble' * noun -> Disassemble
                   * noun 'with' noun -> Disassemble;

Extend 'examine' * 'back' 'of' noun -> Turn;

Extend 'open' * 'eye'/'eyes' -> OpenEyes
              * 'your'/'my' 'eye'/'eyes' -> OpenEyes;

Extend 'look' * 'under' noun -> LookUnder;
Extend 'look' * 'through'/'out' noun -> Examine;
Extend 'look' * 'out' 'of' noun -> Examine;

Extend 'unlock' first * noun -> UnlockWithoutKey;

Extend 'close' * 'eye'/'eyes' -> CloseEyes
               * 'your' 'eye'/'eyes' -> CloseEyes;

Extend 'attack' * held 'at'/'on' noun -> Attack;

Extend 'fill' replace
  * noun -> FillError
  * held 'with' noun -> Fill
  * noun 'in'/'into' held -> Fill;

Extend 'speak' replace
  * noun -> Talk
  * 'to'/'with' noun -> Talk
  * topic 'to' noun -> Interact
  * topic -> InteractError;

Extend 'ask' replace
  * noun -> Talk
  * noun 'for' noun -> AskFor
  * noun 'about' topic -> Interact
	* noun 'to' topic -> Interact
  * 'that' noun topic -> Interact;

Extend 'tell' replace
	* noun 'about' topic -> Interact
	* noun 'to' topic -> Interact;

Extend 'eat' replace
    * creature -> Eat
    * held -> Eat;

Verb meta 'continue' = 'again'; 
Verb 'grab' = 'take';
Verb 'kick' = 'attack';
Verb 'feel' = 'touch';
Verb 'flip' = 'turn';
Verb 'talk' = 'speak';
Verb 'unplug' = 'take';
Verb 'operate' = 'open';
Verb 'access' = 'open';
Verb 'start' = 'open';
Verb 'unsecure' = 'open';
Verb 'consult' = 'open';
Verb 'shoot' = 'attack';
Verb 'dismantle' = 'disassemble';
Verb 'stab' = 'cut';
Verb 'pour' = 'fill';

end;
